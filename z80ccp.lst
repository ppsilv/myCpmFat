# file opened: z80ccp.asm
   1  0000              ;
   2  0000              ;	ENHANCED CP/M CONSOLE COMMAND PROCESSOR (CCP) for CP/M REV. 2.2
   3  0000              ;
   4  0000              ;	Origianl CCP disassembled by ????
   5  0000              ;	Original CCP disassembled further by RLC
   6  0000              ;	Original CCP commented by RLC
   7  0000              ;	Modified and generalized by John Thomas (6/20/81)
   8  0000              ;	Macros expanded and condtional for terminals which
   9  0000              ;	use	form feeds to clear the screen added by
  10  0000              ;	Bo	McCormick (6/27/81)
  11  0000              ;
  12  0000              ;	Converted to Z80-style mnemonics and slightly modified
  13  0000              ;	for Z80 Playground by John Squires, January 2021
  14  0000              ;
  15  0000              ;	ASSEMBLING THIS CCP FOR CP/M 2.2 *****
  16  0000              ;	You	must be using a Z-80 processor to run this
  17  0000              ;	program. You do not need MAC or any macro library.
  18  0000              ;	If	you add further modifications to the program
  19  0000              ;	the	total size of the program must not exceed
  20  0000              ;	2K	in order to fit under the BDOS. (Unless you change the CCP_START location!)
  21  0000              ;	Code must be added to use the Clear Screen command with
  22  0000              ;	your terminal, if it is not VT52 compatible.
  23  0000              ;	Also, there is a provision for a boot-up command. Place
  24  0000              ;	the	command to be executed on cold and warm starts at
  25  0000              ;	location CBUFF.
  26  0000              ;
  27  0000              ;	NON	-STANDARD FEATURES *****
  28  0000              ;	The	non-standard features incorporated into this CCP are:
  29  0000              ;	A.	The Command-Search Hierarchy, as follows --
  30  0000              ;	    1.	Scan for a CCP-resident command and execute it if found
  31  0000              ;	    2.	If not CCP-resident, look for a .COM file on disk
  32  0000              ;	    3.	If the .COM file is not found in the current user area and the current user area is not USER 0,
  33  0000              ;	    	USER 0 is selected and scanned for the file
  34  0000              ;		4.	If the .COM file is not found on the current logged-in disk drive, drive A: is selected
  35  0000              ;			and	scanned for the file
  36  0000              ;	B.	The DIR Command no longer prints the current drive spec at	the beginning of each line
  37  0000              ;	C.	The TYPE Command pages its output
  38  0000              ;	D.	A LIST Command now exists which is like TYPE but does not page and sends its output to the LST: device
  39  0000              ;	E.	A CLS (Clear Screen) Command now exists which clears the screen of the terminal
  40  0000              ;	F.	The user number is printed as part of the command prompt;
  41  0000              ;		the	prompt is now du>, such as A0> and A15>
  42  0000              ;	G.	Z80-code is used throughout to reduce the size of the CCP
  43  0000              ;		and	give room to implement the additional functions
  44  0000              ;	H.	The input line buffer has been reduced in size to 100 bytes
  45  0000              ;	I.	The ERA Command displays the names of the files it is to erase
  46  0000              ;	J.	The DIR Command has an additional special form of "DIR @"
  47  0000              ;		which	displays all files (both non-system and system),
  48  0000              ;		while	"DIR" displays just the non-system files
  49  0000              ;	K.	The Directory Display no longer displays the disk name at
  50  0000              ;		the	beginning of each line and it now includes a '.' between
  51  0000              ;		the	file name and file type (FILENAME.TYP)
  52  0000              ;	L.	The SUBMIT File Facility now expects the $$$.SUB file to be
  53  0000              ;		on	the currently logged-in disk (as opposed to always A:)
  54  0000              ;	M.	The Command Line Prompt is now '$' if the command comes from
  55  0000              ;		a	$$$.SUB file and '>' if the command comes from the user;
  56  0000              ;		also, the '>' is not printed until all preprocessing is completed
  57  0000              ;	N.	The TYPE and LIST Commands mask the MSB of each byte, so that
  58  0000              ;		files created by editors such as EDIT80 are "printable"
  59  0000              ;
  60  0000              FALSE:	EQU	0
  61  0000              TRUE:	EQU	NOT FALSE
  62  0000
  63  0000              	include "locations.asm"
# file opened: locations.asm
   1+ 0000              ; locations.asm
   2+ 0000              ; Stores the ORG values for the CCP, BDOS, BIOS and CORE
   3+ 0000
   4+ 0000              ;CORE_START  equ $F600    ; $FFFF - 2.5K
   5+ 0000              ;BIOS_START  equ $F400    ; $F600 - 0.5K
   6+ 0000              ;BDOS_START  equ $EA00    ; $F400 - 2.5K
   7+ 0000              ;CCP_START   equ $DE00    ; $EA00 - 3.0K
   8+ 0000
   9+ 0000              CORE_START  equ $EC00    ; 5119
  10+ 0000              BIOS_START  equ $DC00    ; 4096
  11+ 0000              BDOS_START  equ $D000    ; 3072
  12+ 0000              CCP_START   equ $B000    ; 8192
  13+ 0000
  14+ 0000              CORE_SIZE   equ 0xFFFF-CORE_START
  15+ 0000              BIOS_SIZE   equ CORE_START-BIOS_START
  16+ 0000              BDOS_SIZE   equ BIOS_START-BDOS_START
  17+ 0000              CCP_SIZE    equ BDOS_START-CCP_START
# file closed: locations.asm
  64  0000
  65  0000              CCPLOC:	EQU	CCP_START	; START OF CCP IN MEMORY
  66  0000              	; REPLACE WITH VALUE
  67  0000              	; FOR YOUR SYSTEM
  68  0000
  69  0000              NLINES:	EQU	24			; NUMBER OF LINES ON CRT SCREEN
  70  0000              H19:	EQU	FALSE		; USING HEATH H19/H89 TERMINAL
  71  0000              HAZE:	EQU	FALSE		; USING HAZELTINE 1500 TERMINAL
  72  0000              FFTERM:	EQU	TRUE		; USING TERMINAL THAT RESPONDS TO 0CH
  73  0000              	; OR ANY CHARACTER IF YOU CHANGE THE
  74  0000              	; VALUE OF FF BELOW
  75  0000              CR:		EQU	0DH
  76  0000              LF:		EQU	0AH
  77  0000              TAB:	EQU	09H
  78  0000              FF:		EQU	0CH		;<==== CHANGE THIS BYTE IF TERMINAL
  79  0000              ESC:	EQU	1BH		;      NEEDS A DIFFERENT CHARACTER
  80  0000              					;      TO CLEAR THE SCREEN
  81  0000
  82  0000              WBOOT:	EQU	0000H		; CP/M WARM BOOT ADDRESS
  83  0000              UDFLAG:	EQU	0004H		; USER NUMBER IS IN HIGH NYBBLE, DISK IN LOW
  84  0000              BDOS:	EQU	0005H		; BDOS FUNCTION CALL ENTRY PT
  85  0000              TBUFF:	EQU	0080H		; DEFAULT DISK I/O BUFFER
  86  0000              TFCB:	EQU	005CH		; DEFAULT FCB BUFFER
  87  0000              TPA:	EQU	0100H		; BASE OF TPA
  88  0000
  89  0000
  90  0000              	ORG	CCPLOC		; START OF CCP IN MEMEORY IN YOUR SYSTEM
  91  B000
  92  B000              ENTRY:
  93  B000 C3 01 B3     	JP	CCP
  94  B003 C3 FD B2     	JP	CCP1
  95  B006
  96  B006              ;	INPUT	COMMAND LINE AND DEFAULT COMMAND
  97  B006              BUFLEN	EQU	100		; MAXIMUM BUFFER LENGTH
  98  B006              MBUFF:
  99  B006 64           	DEFB	BUFLEN		; MAXIMUM BUFFER LENGTH
 100  B007              CBUFF:
 101  B007 03           	DEFB	3		;<== NUMBER OF VALID CHARS IN COMMAND LINE
 102  B008              CIBUFF:
 103  B008 44 49 52 20  	DEFB	'DIR '		;<== DEFAULT (COLD BOOT) COMMAND
 104  B00C 20 20 20 20  	DEFB	'    '
 105  B010 20 20 20 20  	DEFB	'    '
 106  B014 20 20 20 20  	DEFB	'    '
 107  B018              CIBUF:
 108  B018 00 00 00...  	DEFS	85		; TOTAL IS 100 BYTES
 109  B06D 00 00 00...  	DEFS	20		; STACK AREA
 110  B081              STACK EQU	$		; TOP OF STACK
 111  B081
 112  B081              CIBPTR:
 113  B081 08 B0        	DEFW	CIBUFF		;POINTER TO CMD INPUT BUFF
 114  B083              CIPTR:
 115  B083 18 B0        	DEFW	CIBUF		;CURRENT PNTR
 116  B085
 117  B085              ;
 118  B085              ;	I/O UTILITIES
 119  B085              ;
 120  B085
 121  B085              ;	OUTPUT <SP>
 122  B085              SPACER:
 123  B085 3E 20        	LD	A,' '		; FALL THRU TO CONOUT
 124  B087
 125  B087              ;	OUTPUT CHAR IN REG A TO CONSOLE AND DON'T CHANGE BC
 126  B087              CONOUT:
 127  B087 C5           	PUSH	BC
 128  B088 E5           	PUSH	HL
 129  B089 0E 02        	LD	C,02H
 130  B08B              OUTPUT:
 131  B08B 5F           	LD	E,A
 132  B08C CD 05 00     	CALL	BDOS
 133  B08F E1           	POP	HL
 134  B090 C1           	POP	BC
 135  B091 C9           	RET
 136  B092
 137  B092              ;	CALL	BDOS AND SAVE BC
 138  B092              BDOSB:
 139  B092 C5           	PUSH	BC
 140  B093 CD 05 00     	CALL	BDOS
 141  B096 C1           	POP	BC
 142  B097 C9           	RET
 143  B098
 144  B098              ;	OUTPUT CHAR IN REG A TO LIST DEVICE
 145  B098              LSTOUT:
 146  B098 C5           	PUSH	BC
 147  B099 E5           	PUSH	HL
 148  B09A 0E 05        	LD	C,05H
 149  B09C 18           	DEFB	18H
 150  B09D ED           	DEFB	OUTPUT-$-1 AND 0FFH
 151  B09E
 152  B09E              ;	OUTPUT <CRLF>
 153  B09E              CRLF:
 154  B09E 3E 0D        	LD	A,CR
 155  B0A0 CD 87 B0     	CALL	CONOUT
 156  B0A3 3E 0A        	LD	A,LF
 157  B0A5 18           	DEFB	18H
 158  B0A6 E0           	DEFB	CONOUT-$-1 AND 0FFH
 159  B0A7
 160  B0A7              ;	PRINT	STRING (ENDING IN 0) PTED TO BY RET ADR; START WITH <CRLF>
 161  B0A7              PRINT:
 162  B0A7 E3           	EX	(SP),HL		; GET PTR TO STRING
 163  B0A8 F5           	PUSH	AF		; SAVE FLAGS
 164  B0A9 CD 9E B0     	CALL	CRLF		; NEW LINE
 165  B0AC CD B2 B0     	CALL	PRIN1
 166  B0AF F1           	POP	AF		; GET FLAGS
 167  B0B0 E3           	EX	(SP),HL		; RESTORE HL AND RET ADR
 168  B0B1 C9           	RET
 169  B0B2
 170  B0B2              ;	PRINT	STRING (ENDING IN 0) PTED TO BY HL
 171  B0B2              PRIN1:
 172  B0B2 7E           	LD	A,(HL)		; GET NEXT BYTE
 173  B0B3 23           	INC	HL		; PT TO NEXT BYTE
 174  B0B4 B7           	OR	A		; DONE IF 0
 175  B0B5 C8           	RET	Z
 176  B0B6 CD 87 B0     	CALL	CONOUT		; PRINT CHAR
 177  B0B9 18           	DEFB	18H
 178  B0BA F7           	DEFB	PRIN1-$-1 AND 0FFH
 179  B0BB
 180  B0BB              ;
 181  B0BB              ;	BDOS	FUNCTION ROUTINES
 182  B0BB              ;
 183  B0BB
 184  B0BB              RESET:
 185  B0BB 0E 0D        	LD	C,0DH
 186  B0BD C3 05 00     	JP	BDOS
 187  B0C0              ;
 188  B0C0              LOGIN:
 189  B0C0 5F           	LD	E,A
 190  B0C1 0E 0E        	LD	C,0EH
 191  B0C3 C3 05 00     	JP	BDOS
 192  B0C6              ;
 193  B0C6              OPENF:
 194  B0C6 AF           	XOR	A
 195  B0C7 32 FD B7     	LD	(FCBCR),A
 196  B0CA 11 DD B7     	LD	DE,FCBDN	; FALL THRU TO OPEN
 197  B0CD              ;
 198  B0CD              OPEN:
 199  B0CD 0E 0F        	LD	C,0FH		; FALL THRU TO GRBDOS
 200  B0CF              ;
 201  B0CF              GRBDOS:
 202  B0CF CD 05 00     	CALL	BDOS
 203  B0D2 3C           	INC	A		; SET ZERO FLAG FOR ERROR RETURN
 204  B0D3 C9           	RET
 205  B0D4              ;
 206  B0D4              CLOSE:
 207  B0D4 0E 10        	LD	C,10H
 208  B0D6 18           	DEFB	18H
 209  B0D7 F7           	DEFB	GRBDOS-$-1 AND 0FFH
 210  B0D8              ;
 211  B0D8              SEARF:
 212  B0D8 11 DD B7     	LD	DE,FCBDN	; SPECIFY FCB
 213  B0DB              SEAR1:
 214  B0DB 0E 11        	LD	C,11H
 215  B0DD 18           	DEFB	18H
 216  B0DE F0           	DEFB	GRBDOS-$-1 AND 0FFH
 217  B0DF              ;
 218  B0DF              SEARN:
 219  B0DF 0E 12        	LD	C,12H
 220  B0E1 18           	DEFB	18H
 221  B0E2 EC           	DEFB	GRBDOS-$-1 AND 0FFH
 222  B0E3              ;
 223  B0E3              DELETE:
 224  B0E3 0E 13        	LD	C,13H
 225  B0E5 C3 05 00     	JP	BDOS
 226  B0E8              ;
 227  B0E8              READF:
 228  B0E8 11 DD B7     	LD	DE,FCBDN	; FALL THRU TO READ
 229  B0EB              ;
 230  B0EB              READ:
 231  B0EB 0E 14        	LD	C,14H		; FALL THRU TO GOBDOS
 232  B0ED              ;
 233  B0ED              GOBDOS:
 234  B0ED CD 92 B0     	CALL	BDOSB		; PRESERVE B
 235  B0F0 B7           	OR	A
 236  B0F1 C9           	RET
 237  B0F2              ;
 238  B0F2              WRITE:
 239  B0F2 0E 15        	LD	C,15H
 240  B0F4 18           	DEFB	18H
 241  B0F5 F7           	DEFB	GOBDOS-$-1 AND 0FFH
 242  B0F6              ;
 243  B0F6              CREATE:
 244  B0F6 0E 16        	LD	C,16H
 245  B0F8 18           	DEFB	18H
 246  B0F9 D5           	DEFB	GRBDOS-$-1 AND 0FFH
 247  B0FA              ;
 248  B0FA              GETUSR:
 249  B0FA 1E FF        	LD	E,0FFH		;GET CURRENT USER NUMBER
 250  B0FC              SETUSR:
 251  B0FC 0E 20        	LD	C,20H		;SET USER NUMBER TO VALUE IN E (GET IF E=FFH)
 252  B0FE C3 05 00     	JP	BDOS
 253  B101
 254  B101              ;
 255  B101              ;	END	OF BDOS FUNCTIONS
 256  B101              ;
 257  B101
 258  B101              ;
 259  B101              ;	CCP	UTILITIES
 260  B101              ;
 261  B101
 262  B101              ;	DEFL	USER/DISK FLAG TO CURRENT USER AND DEFAULT DISK
 263  B101              SETUD:
 264  B101 CD FA B0     	CALL	GETUSR		; GET NUMBER OF CURRENT USER
 265  B104 87           	ADD	A,A		; PLACE IT IN HIGH NYBBLE
 266  B105 87           	ADD	A,A
 267  B106 87           	ADD	A,A
 268  B107 87           	ADD	A,A
 269  B108 21 01 B8     	LD	HL,TDRIVE	; MASK IN DEFAULT DRIVE NUMBER (LOW NYBBLE)
 270  B10B B6           	OR	(HL)		; MASK IN
 271  B10C 32 04 00     	LD	(UDFLAG),A	; SET USER/DISK NUMBER
 272  B10F C9           	RET
 273  B110
 274  B110              ;	DEFL	USER/DISK FLAG TO USER 0 AND DEFAULT DISK
 275  B110              SETU0D:
 276  B110 3A 01 B8     	LD	A,(TDRIVE)	; SET USER 0/DEFAULT DISK
 277  B113 32 04 00     	LD	(UDFLAG),A	; SET USER/DISK NUMBER
 278  B116 C9           	RET
 279  B117
 280  B117              ;	CONVE	RT CHAR IN A TO UPPER CASE
 281  B117              UCASE:
 282  B117 FE 61        	CP	61H		; LOWER-CASE A
 283  B119 D8           	RET	C
 284  B11A FE 7B        	CP	7BH		; GREATER THAN LOWER-CASE Z?
 285  B11C D0           	RET	NC
 286  B11D E6 5F        	AND	5FH		; CAPITALIZE
 287  B11F C9           	RET
 288  B120
 289  B120              ;	INPUT	NEXT COMMAND TO CCP
 290  B120              REDBUF:
 291  B120 3A BB B7     	LD	A,(RNGSUB)	; SUBMIT FILE CURRENTLY IN EXECUTION?
 292  B123 B7           	OR	A		; 0=NO
 293  B124 28           	DEFB	28H
 294  B125 47           	DEFB	RB1-$-1 AND 0FFH; GET LINE FROM CONSOLE IF NOT
 295  B126 11 BC B7     	LD	DE,SUBFCB	; OPEN $$$.SUB
 296  B129 CD CD B0     	CALL	OPEN
 297  B12C 28           	DEFB	28H
 298  B12D 3F           	DEFB	RB1-$-1 AND 0FFH; ERASE $$$.SUB IF END OF FILE AND GET CMND
 299  B12E 3A CB B7     	LD	A,(SUBFRC)	; GET VALUE OF LAST RECORD IN FILE
 300  B131 3D           	DEC	A		; PT TO NEXT TO LAST RECORD
 301  B132 32 DC B7     	LD	(SUBFCR),A	; SAVE NEW VALUE OF LAST RECORD IN $$$.SUB
 302  B135 11 BC B7     	LD	DE,SUBFCB	; READ LAST RECORD OF SUBMIT FILE
 303  B138 CD EB B0     	CALL	READ
 304  B13B 20           	DEFB	20H
 305  B13C 30           	DEFB	RB1-$-1 AND 0FFH; ABORT $$$.SUB IF ERROR IN READING LAST REC
 306  B13D 11 07 B0     	LD	DE,CBUFF	; COPY LAST RECORD (NEXT SUBMIT CMND) TO CBUFF
 307  B140 21 80 00     	LD	HL,TBUFF	;   FROM TBUFF
 308  B143 06 64        	LD	B,BUFLEN	; NUMBER OF BYTES
 309  B145 CD D0 B3     	CALL	MOVEHD
 310  B148 21 CA B7     	LD	HL,SUBFS2	; PT TO S2 OF $$$.SUB FCB
 311  B14B 36 00        	LD	(HL),0		; SET S2 TO ZERO
 312  B14D 23           	INC	HL		; PT TO RECORD COUNT
 313  B14E 35           	DEC	(HL)		; DECREMENT RECORD COUNT OF $$$.SUB
 314  B14F 11 BC B7     	LD	DE,SUBFCB	; CLOSE $$$.SUB
 315  B152 CD D4 B0     	CALL	CLOSE
 316  B155 28           	DEFB	28H
 317  B156 16           	DEFB	RB1-$-1 AND 0FFH; ABORT $$$.SUB IF ERROR
 318  B157 3E 24        	LD	A,'$'		; PRINT SUBMIT PROMPT
 319  B159 CD 87 B0     	CALL	CONOUT
 320  B15C 21 08 B0     	LD	HL,CIBUFF	; PRINT COMMAND LINE FROM $$$.SUB
 321  B15F CD B2 B0     	CALL	PRIN1
 322  B162 CD 9C B1     	CALL	BREAK		; CHECK FOR ABORT (ANY CHAR)
 323  B165 28           	DEFB	28H
 324  B166 1C           	DEFB	CNVBUF-$-1 AND 0FFH; IF <NULL> (NO ABORT), CAP COMMAND AND RUN
 325  B167 CD B5 B1     	CALL	SUBKIL		; KILL $$$.SUB IF ABORT
 326  B16A C3 2D B3     	JP	RESTRT		; RESTART CCP
 327  B16D
 328  B16D              ;	INPUT	COMMAND LINE FROM USER CONSOLE
 329  B16D              RB1:
 330  B16D CD B5 B1     	CALL	SUBKIL		; ERASE $$$.SUB IF PRESENT
 331  B170 CD 01 B1     	CALL	SETUD		; SET USER AND DISK
 332  B173 3E 3E        	LD	A,'>'		; PRINT PROMPT
 333  B175 CD 87 B0     	CALL	CONOUT
 334  B178 0E 0A        	LD	C,0AH		; READ COMMAND LINE FROM USER
 335  B17A 11 06 B0     	LD	DE,MBUFF
 336  B17D CD 05 00     	CALL	BDOS
 337  B180 CD 10 B1     	CALL	SETU0D		; SET CURRENT DISK NUMBER IN LOWER PARAMS
 338  B183
 339  B183              ;	CAPIT	ALIZE STRING (ENDING IN 0) IN CBUFF
 340  B183              CNVBUF:
 341  B183 21 07 B0     	LD	HL,CBUFF	; PT TO USER'S COMMAND
 342  B186 46           	LD	B,(HL)		; CHAR COUNT IN B
 343  B187              CB1:
 344  B187 23           	INC	HL		; PT TO 1ST VALID CHAR
 345  B188 78           	LD	A,B		; DONE WHEN <NULL> ENCOUNTERED
 346  B189 B7           	OR	A
 347  B18A 28           	DEFB	28H
 348  B18B 08           	DEFB	CB2-$-1 AND 0FFH
 349  B18C 7E           	LD	A,(HL)		; CAPITALIZE COMMAND CHAR
 350  B18D CD 17 B1     	CALL	UCASE
 351  B190 77           	LD	(HL),A
 352  B191 05           	DEC	B		; CONTINUE UNTIL END OF COMMAND LINE
 353  B192 18           	DEFB	18H
 354  B193 F3           	DEFB	CB1-$-1 AND 0FFH
 355  B194              CB2:
 356  B194 77           	LD	(HL),A		; STORE ENDING <NULL>
 357  B195 21 08 B0     	LD	HL,CIBUFF	; SET COMMAND LINE PTR TO 1ST CHAR
 358  B198 22 81 B0     	LD	(CIBPTR),HL
 359  B19B C9           	RET
 360  B19C
 361  B19C              ;	CHECK	FOR ANY CHAR FROM USER CONSOLE; RET W/ZERO SET IF NONE
 362  B19C              BREAK:
 363  B19C D5           	PUSH	DE		; SAVE DE
 364  B19D 1E FF        	LD	E,0FFH		; GET STATUS
 365  B19F 0E 06        	LD	C,6		; DIRECT CONSOLE I/O
 366  B1A1 CD 92 B0     	CALL	BDOSB
 367  B1A4 D1           	POP	DE
 368  B1A5 E6 7F        	AND	7FH		; MASK MSB AND SET ZERO FLAG
 369  B1A7 C9           	RET
 370  B1A8
 371  B1A8              ;	RETUR	N NUMBER OF CURRENT DISK IN A
 372  B1A8              GETDRV:
 373  B1A8 0E 19        	LD	C,19H
 374  B1AA C3 05 00     	JP	BDOS
 375  B1AD
 376  B1AD              ;	DEFL	80H AS DMA ADDRESS
 377  B1AD              DEFDMA:
 378  B1AD 11 80 00     	LD	DE,TBUFF	; 80H=TBUFF
 379  B1B0              DMASET:
 380  B1B0 0E 1A        	LD	C,1AH
 381  B1B2 C3 05 00     	JP	BDOS
 382  B1B5
 383  B1B5              ;	CHECK	FOR SUBMIT FILE IN EXECUTION AND ABORT IT IF SO
 384  B1B5              SUBKIL:
 385  B1B5 21 BB B7     	LD	HL,RNGSUB	; CHECK FOR SUBMIT FILE IN EXECUTION
 386  B1B8 7E           	LD	A,(HL)
 387  B1B9 B7           	OR	A		; 0=NO
 388  B1BA C8           	RET	Z
 389  B1BB 36 00        	LD	(HL),0		; ABORT SUBMIT FILE
 390  B1BD 11 BC B7     	LD	DE,SUBFCB	; DELETE $$$.SUB
 391  B1C0 C3 E3 B0     	JP	DELETE
 392  B1C3
 393  B1C3              ;	INVAL	ID COMMAND -- PRINT IT
 394  B1C3              ERROR:
 395  B1C3 CD 9E B0     	CALL	CRLF		; NEW LINE
 396  B1C6 2A 83 B0     	LD	HL,(CIPTR)	; PT TO BEGINNING OF COMMAND LINE
 397  B1C9              ERR2:
 398  B1C9 7E           	LD	A,(HL)		; GET CHAR
 399  B1CA FE 20        	CP	' '		; SIMPLE '?' IF <SP>
 400  B1CC 28           	DEFB	28H
 401  B1CD 0B           	DEFB	ERR1-$-1 AND 0FFH
 402  B1CE B7           	OR	A		; SIMPLE '?' IF <NULL>
 403  B1CF 28           	DEFB	28H
 404  B1D0 08           	DEFB	ERR1-$-1 AND 0FFH
 405  B1D1 E5           	PUSH	HL		; SAVE PTR TO ERROR COMMAND CHAR
 406  B1D2 CD 87 B0     	CALL	CONOUT		; PRINT COMMAND CHAR
 407  B1D5 E1           	POP	HL		; GET PTR
 408  B1D6 23           	INC	HL		; PT TO NEXT
 409  B1D7 18           	DEFB	18H
 410  B1D8 F0           	DEFB	ERR2-$-1 AND 0FFH; CONTINUE
 411  B1D9              ERR1:
 412  B1D9 3E 3F        	LD	A,'?'		; PRINT '?'
 413  B1DB CD 87 B0     	CALL	CONOUT
 414  B1DE CD B5 B1     	CALL	SUBKIL		; TERMINATE ACTIVE $$$.SUB IF ANY
 415  B1E1 C3 2D B3     	JP	RESTRT		; RESTART CCP
 416  B1E4
 417  B1E4              ;	CHECK	TO SEE IF DE PTS TO DELIMITER; IF SO, RET W/ZERO FLAG SET
 418  B1E4              SDELM:
 419  B1E4 1A           	LD	A,(DE)
 420  B1E5 B7           	OR	A		; 0=DELIMITER
 421  B1E6 C8           	RET	Z
 422  B1E7 FE 20        	CP	' '		; ERROR IF < <SP>
 423  B1E9 DA C3 B1     	JP	C,ERROR
 424  B1EC C8           	RET	Z		; <SP>=DELIMITER
 425  B1ED FE 3D        	CP	'='		; '='=DELIMITER
 426  B1EF C8           	RET	Z
 427  B1F0 FE 5F        	CP	5FH		; UNDERSCORE=DELIMITER
 428  B1F2 C8           	RET	Z
 429  B1F3 FE 2E        	CP	'.'		; '.'=DELIMITER
 430  B1F5 C8           	RET	Z
 431  B1F6 FE 3A        	CP	':'		; ':'=DELIMITER
 432  B1F8 C8           	RET	Z
 433  B1F9 FE 3B        	CP	';'		; ';'=DELIMITER
 434  B1FB C8           	RET	Z
 435  B1FC FE 3C        	CP	'<'		; '<'=DELIMITER
 436  B1FE C8           	RET	Z
 437  B1FF FE 3E        	CP	'>'		; '>'=DELIMITER
 438  B201 C9           	RET
 439  B202
 440  B202              ;	SKIP	STRING PTED TO BY DE (STRING ENDS IN 0) UNTIL END OF STRING
 441  B202              ;	OR	NON-BLANK ENCOUNTERED (BEGINNING OF TOKEN)
 442  B202              SBLANK:
 443  B202 1A           	LD	A,(DE)
 444  B203 B7           	OR	A
 445  B204 C8           	RET	Z
 446  B205 FE 20        	CP	' '
 447  B207 C0           	RET	NZ
 448  B208 13           	INC	DE
 449  B209 18           	DEFB	18H
 450  B20A F7           	DEFB	SBLANK-$-1 AND 0FFH
 451  B20B
 452  B20B              ;	ADD	A,A TO HL (HL=HL+A)
 453  B20B              ADDAH:
 454  B20B 85           	ADD	A,L
 455  B20C 6F           	LD	L,A
 456  B20D D0           	RET	NC
 457  B20E 24           	INC	H
 458  B20F C9           	RET
 459  B210
 460  B210              ;	EXTRA	CT TOKEN FROM COMMAND LINE AND PLACE IT INTO FCBDN; FORMAT FCBDN
 461  B210              ;	IF	TOKEN RESEMBLES FILE NAME AND TYPE (FILENAME.TYP);
 462  B210              ;	ON	INPUT, CIBPTR PTS TO CHAR AT WHICH TO START SCAN
 463  B210              ;	ON	OUTPUT, CIBPTR PTS TO CHAR AT WHICH TO CONTINUE AND ZERO FLAG IS SET
 464  B210              ;	IF	'?' IS IN TOKEN
 465  B210              SCANER:
 466  B210 3E 00        	LD	A,0		; START AT DRIVE SPECIFICATION BYTE
 467  B212              SCAN1:
 468  B212 21 DD B7     	LD	HL,FCBDN	; POINT TO FCBDN
 469  B215 CD 0B B2     	CALL	ADDAH		; OFFSET INTO FCB
 470  B218 E5           	PUSH	HL
 471  B219 E5           	PUSH	HL
 472  B21A AF           	XOR	A		; SET TEMPORARY DRIVE NUMBER TO DEFAULT
 473  B21B 32 02 B8     	LD	(TEMPDR),A
 474  B21E 2A 81 B0     	LD	HL,(CIBPTR)	; GET PTR TO NEXT CHAR IN COMMAND LINE
 475  B221 EB           	EX	DE,HL		; PTR IN DE
 476  B222 CD 02 B2     	CALL	SBLANK		; SKIP TO NON-BLANK OR END OF LINE
 477  B225 EB           	EX	DE,HL
 478  B226 22 83 B0     	LD	(CIPTR),HL	; SET PTR TO NON-BLANK OR END OF LINE
 479  B229 EB           	EX	DE,HL		; DE PTS TO NEXT NON-BLANK OR END OF LINE CHAR
 480  B22A E1           	POP	HL		; GET PTR TO NEXT BYTE IN FCBDN
 481  B22B 1A           	LD	A,(DE)		; END OF LINE?
 482  B22C B7           	OR	A		; 0=YES
 483  B22D 28           	DEFB	28H
 484  B22E 0A           	DEFB	SCAN2-$-1 AND 0FFH
 485  B22F DE 40        	SBC	A,'A'-1		; CONVERT POSSIBLE DRIVE SPEC TO NUMBER
 486  B231 47           	LD	B,A		; STORE NUMBER (A:=0, B:=1, ETC) IN B
 487  B232 13           	INC	DE		; PT TO NEXT CHAR
 488  B233 1A           	LD	A,(DE)		; SEE IF IT IS A COLON (:)
 489  B234 FE 3A        	CP	':'
 490  B236 28           	DEFB	28H
 491  B237 07           	DEFB	SCAN3-$-1 AND 0FFH; YES^  WE HAVE A DRIVE SPEC
 492  B238 1B           	DEC	DE		; NO^  BACK UP PTR TO FIRST NON-BLANK CHAR
 493  B239              SCAN2:
 494  B239 3A 01 B8     	LD	A,(TDRIVE)	; SET 1ST BYTE OF FCBDN AS DEFAULT DRIVE
 495  B23C 77           	LD	(HL),A
 496  B23D 18           	DEFB	18H
 497  B23E 06           	DEFB	SCAN4-$-1 AND 0FFH
 498  B23F              SCAN3:
 499  B23F 78           	LD	A,B		; WE HAVE A DRIVE SPEC^
 500  B240 32 02 B8     	LD	(TEMPDR),A	; SET TEMPORARY DRIVE
 501  B243 70           	LD	(HL),B		; SET 1ST BYTE OF FCBDN AS SPECIFIED DRIVE
 502  B244 13           	INC	DE		; PT TO BYTE AFTER ':'
 503  B245
 504  B245              ;	EXTRA	CT FILENAME FROM POSSIBLE FILENAME.TYP
 505  B245              SCAN4:
 506  B245 06 08        	LD	B,08H		; MAX OF 8 CHARS IN FILE NAME
 507  B247              SCAN5:
 508  B247 CD E4 B1     	CALL	SDELM		; DONE IF DELIMITER ENCOUNTERED - <SP> FILL
 509  B24A 28           	DEFB	28H
 510  B24B 15           	DEFB	SCAN9-$-1 AND 0FFH
 511  B24C 23           	INC	HL		; PT TO NEXT BYTE IN FCBDN
 512  B24D FE 2A        	CP	'*'		; IS (DE) A WILD CARD?
 513  B24F 20           	DEFB	20H
 514  B250 04           	DEFB	SCAN6-$-1 AND 0FFH; CONTINUE IF NOT
 515  B251 36 3F        	LD	(HL),'?'	; PLACE '?' IN FCBDN AND DON'T ADVANCE DE IF SO
 516  B253 18           	DEFB	18H
 517  B254 02           	DEFB	SCAN7-$-1 AND 0FFH
 518  B255              SCAN6:
 519  B255 77           	LD	(HL),A		; STORE FILENAME CHAR IN FCBDN
 520  B256 13           	INC	DE		; PT TO NEXT CHAR IN COMMAND LINE
 521  B257              SCAN7:
 522  B257 10           	DEFB	10H
 523  B258 EE           	DEFB	SCAN5-$-1 AND 0FFH; DECREMENT CHAR COUNT UNTIL 8 ELAPSED
 524  B259              SCAN8:
 525  B259 CD E4 B1     	CALL	SDELM		; 8 CHARS OR MORE - SKIP UNTIL DELIMITER
 526  B25C 28           	DEFB	28H
 527  B25D 08           	DEFB	SCAN10-$-1 AND 0FFH; ZERO FLAG SET IF DELIMITER FOUND
 528  B25E 13           	INC	DE		; PT TO NEXT CHAR IN COMMAND LINE
 529  B25F 18           	DEFB	18H
 530  B260 F8           	DEFB	SCAN8-$-1 AND 0FFH
 531  B261              SCAN9:
 532  B261 23           	INC	HL		; PT TO NEXT BYTE IN FCBDN
 533  B262 36 20        	LD	(HL),' '	; FILL FILENAME PART WITH <SP>
 534  B264 10           	DEFB	10H
 535  B265 FB           	DEFB	SCAN9-$-1 AND 0FFH
 536  B266
 537  B266              ;	EXTRA	CT FILE TYPE FROM POSSIBLE FILENAME.TYP
 538  B266              SCAN10:
 539  B266 06 03        	LD	B,03H		; PREPARE TO EXTRACT TYPE
 540  B268 FE 2E        	CP	'.'		; IF (DE) DELIMITER IS A '.', WE HAVE A TYPE
 541  B26A 20           	DEFB	20H
 542  B26B 1B           	DEFB	SCAN15-$-1 AND 0FFH; FILL FILE TYPE BYTES WITH <SP>
 543  B26C 13           	INC	DE		; PT TO CHAR IN COMMAND LINE AFTER '.'
 544  B26D              SCAN11:
 545  B26D CD E4 B1     	CALL	SDELM		; CHECK FOR DELIMITER
 546  B270 28           	DEFB	28H
 547  B271 15           	DEFB	SCAN15-$-1 AND 0FFH; FILL REST OF TYPE IF IT IS A DELIMITER
 548  B272 23           	INC	HL		; PT TO NEXT BYTE IN FCBDN
 549  B273 FE 2A        	CP	'*'		; WILD?
 550  B275 20           	DEFB	20H
 551  B276 04           	DEFB	SCAN12-$-1 AND 0FFH; STORE CHAR IF NOT WILD
 552  B277 36 3F        	LD	(HL),'?'	; STORE '?' AND DON'T ADVANCE COMMAND LINE PTR
 553  B279 18           	DEFB	18H
 554  B27A 02           	DEFB	SCAN13-$-1 AND 0FFH
 555  B27B              SCAN12:
 556  B27B 77           	LD	(HL),A		; STORE CHAR IN FCBDN
 557  B27C 13           	INC	DE		; PT TO NEXT CHAR IN COMMAND LINE
 558  B27D              SCAN13:
 559  B27D 10           	DEFB	10H
 560  B27E EE           	DEFB	SCAN11-$-1 AND 0FFH; COUNT DOWN CHARS IN FILE TYPE (3 MAX)
 561  B27F              SCAN14:
 562  B27F CD E4 B1     	CALL	SDELM		; SKIP REST OF CHARS AFTER 3-CHAR TYPE TO
 563  B282 28           	DEFB	28H
 564  B283 08           	DEFB	SCAN16-$-1 AND 0FFH;   DELIMITER
 565  B284 13           	INC	DE
 566  B285 18           	DEFB	18H
 567  B286 F8           	DEFB	SCAN14-$-1 AND 0FFH
 568  B287              SCAN15:
 569  B287 23           	INC	HL		; FILL IN REST OF TYP WITH <SP>
 570  B288 36 20        	LD	(HL),' '
 571  B28A 10           	DEFB	10H
 572  B28B FB           	DEFB	SCAN15-$-1 AND 0FFH
 573  B28C
 574  B28C              ;	FILL	IN EX, S1, S2, AND RC WITH ZEROES
 575  B28C              SCAN16:
 576  B28C 06 04        	LD	B,4		; 4 BYTES
 577  B28E              SCAN17:
 578  B28E 23           	INC	HL		; PT TO NEXT BYTE IN FCBDN
 579  B28F 36 00        	LD	(HL),0
 580  B291 10           	DEFB	10H
 581  B292 FB           	DEFB	SCAN17-$-1 AND 0FFH
 582  B293
 583  B293              ;	SCAN	COMPLETE -- DE PTS TO DELIMITER BYTE AFTER TOKEN
 584  B293 EB           	EX	DE,HL		; STORE PTR TO NEXT BYTE IN COMMAND LINE
 585  B294 22 81 B0     	LD	(CIBPTR),HL
 586  B297
 587  B297              ;	DEFL	ZERO FLAG TO INDICATE PRESENCE OF '?' IN FILENAME.TYP
 588  B297 E1           	POP	HL		; GET PTR TO FCBDN IN HL
 589  B298 01 0B 00     	LD	BC,11		; SCAN FOR '?' IN FILENAME.TYP (C=11 BYTES)
 590  B29B              SCAN18:
 591  B29B 23           	INC	HL		; PT TO NEXT BYTE IN FCBDN
 592  B29C 7E           	LD	A,(HL)
 593  B29D FE 3F        	CP	'?'
 594  B29F 20           	DEFB	20H
 595  B2A0 01           	DEFB	SCAN19-$-1 AND 0FFH
 596  B2A1 04           	INC	B		; B<>0 TO INDICATE '?' ENCOUNTERED
 597  B2A2              SCAN19:
 598  B2A2 0D           	DEC	C		; COUNT DOWN
 599  B2A3 20           	DEFB	20H
 600  B2A4 F6           	DEFB	SCAN18-$-1 AND 0FFH
 601  B2A5 78           	LD	A,B		; A=B=NUMBER OF '?' IN FILENAME.TYP
 602  B2A6 B7           	OR	A		; SET ZERO FLAG TO INDICATE ANY '?'
 603  B2A7 C9           	RET
 604  B2A8
 605  B2A8              ;
 606  B2A8              ;	CCP	BUILT-IN COMMAND TABLE AND COMMAND PROCESSOR
 607  B2A8              ;
 608  B2A8              NCMNDS:	EQU	8		; NUMBER OF CCP COMMANDS
 609  B2A8              NCHARS:	EQU	4		; NUMBER OF CHARS/COMMAND
 610  B2A8              ;	CCP	COMMAND NAME TABLE
 611  B2A8              CMDTBL:
 612  B2A8 44 49 52 20  	DEFB	'DIR '
 613  B2AC 45 52 41 20  	DEFB	'ERA '
 614  B2B0 4C 49 53 54  	DEFB	'LIST'
 615  B2B4 54 59 50 45  	DEFB	'TYPE'
 616  B2B8 53 41 56 45  	DEFB	'SAVE'
 617  B2BC 52 45 4E 20  	DEFB	'REN '
 618  B2C0 55 53 45 52  	DEFB	'USER'
 619  B2C4 43 4C 53 20  	DEFB	'CLS '
 620  B2C8              ;	CCP	COMMAND ADDRESS TABLE
 621  B2C8              REQTBL:
 622  B2C8 00 B4        	DEFW	DIR
 623  B2CA A3 B4        	DEFW	ERA
 624  B2CC DE B4        	DEFW	LIST
 625  B2CE E2 B4        	DEFW	TYPE
 626  B2D0 9E B5        	DEFW	SAVE
 627  B2D2 F9 B5        	DEFW	REN
 628  B2D4 6A B6        	DEFW	USER
 629  B2D6 81 B6        	DEFW	CLS
 630  B2D8 A7 B6        	DEFW	COM		;MUST BE A COM FILE
 631  B2DA
 632  B2DA              ;	CMDTB	L (COMMAND TABLE) SCANNER
 633  B2DA              ;	ON	RETURN, A=TABLE ENTRY # (0-5) OR 6 IF NOT FOUND (COM FILE)
 634  B2DA              CMDSER:
 635  B2DA 21 A8 B2     	LD	HL,CMDTBL	; PT TO COMMAND TABLE
 636  B2DD 0E 00        	LD	C,0		; SET COMMAND COUNTER
 637  B2DF              CMS1:
 638  B2DF 79           	LD	A,C		; CHECK FOR DONE
 639  B2E0 FE 08        	CP	NCMNDS		; NUMBER OF COMMANDS
 640  B2E2 D0           	RET	NC
 641  B2E3 11 DE B7     	LD	DE,FCBFN	; PT TO STORED COMMAND NAME
 642  B2E6 06 04        	LD	B,NCHARS	; NUMBER OF CHARS/COMMAND (8 MAX)
 643  B2E8              CMS2:
 644  B2E8 1A           	LD	A,(DE)		; COMPARE AGAINST TABLE ENTRY
 645  B2E9 BE           	CP	(HL)
 646  B2EA 20           	DEFB	20H
 647  B2EB 0B           	DEFB	CMS3-$-1 AND 0FFH; NO MATCH
 648  B2EC 13           	INC	DE		; PT TO NEXT CHAR
 649  B2ED 23           	INC	HL
 650  B2EE 10           	DEFB	10H
 651  B2EF F8           	DEFB	CMS2-$-1 AND 0FFH; COUNT DOWN
 652  B2F0 1A           	LD	A,(DE)		; NEXT CHAR IN INPUT COMMAND MUST BE <SP>
 653  B2F1 FE 20        	CP	' '
 654  B2F3 20           	DEFB	20H
 655  B2F4 05           	DEFB	CMS4-$-1 AND 0FFH
 656  B2F5 79           	LD	A,C		; TABLE ENTRY NUMBER IN A
 657  B2F6 C9           	RET
 658  B2F7              CMS3:
 659  B2F7 23           	INC	HL		; SKIP TO NEXT COMMAND TABLE ENTRY
 660  B2F8 10           	DEFB	10H
 661  B2F9 FD           	DEFB	CMS3-$-1 AND 0FFH
 662  B2FA              CMS4:
 663  B2FA 0C           	INC	C		; INCREMENT TABLE ENTRY NUMBER
 664  B2FB 18           	DEFB	18H
 665  B2FC E2           	DEFB	CMS1-$-1 AND 0FFH
 666  B2FD
 667  B2FD              ;
 668  B2FD              ;	CCP	STARTING POINTS
 669  B2FD              ;
 670  B2FD
 671  B2FD              ;	START	CCP AND DON'T PROCESS DEFAULT COMMAND STORED
 672  B2FD              CCP1:
 673  B2FD AF           	XOR	A		; SET NO DEFAULT COMMAND
 674  B2FE 32 07 B0     	LD	(CBUFF),A
 675  B301
 676  B301              ;	START	CCP AND POSSIBLY PROCESS DEFAULT COMMAND
 677  B301              CCP:
 678  B301 31 81 B0     	LD	SP,STACK	; RESET STACK
 679  B304 C5           	PUSH	BC
 680  B305 79           	LD	A,C		; C=USER/DISK NUMBER (SEE LOC 4)
 681  B306 1F           	RRA			; EXTRACT USER NUMBER
 682  B307 1F           	RRA
 683  B308 1F           	RRA
 684  B309 1F           	RRA
 685  B30A E6 0F        	AND	0FH
 686  B30C 5F           	LD	E,A		; SET USER NUMBER
 687  B30D CD FC B0     	CALL	SETUSR
 688  B310 CD BB B0     	CALL	RESET		; RESET DISK SYSTEM
 689  B313 C1           	POP	BC
 690  B314 79           	LD	A,C		; C=USER/DISK NUMBER (SEE LOC 4)
 691  B315 E6 0F        	AND	0FH		; EXTRACT DEFAULT DISK DRIVE
 692  B317 32 01 B8     	LD	(TDRIVE),A	; SET IT
 693  B31A CD C0 B0     	CALL	LOGIN		; LOG IN DEFAULT DISK
 694  B31D 11 BC B7     	LD	DE,SUBFCB	; CHECK FOR $$$.SUB ON CURRENT DISK
 695  B320 CD DB B0     	CALL	SEAR1
 696  B323 2F           	CPL			; 0FFH IS RETURNED IF NO $$$.SUB, SO COMPLEMENT
 697  B324 32 BB B7     	LD	(RNGSUB),A	; SET FLAG (0=NO $$$.SUB)
 698  B327 3A 07 B0     	LD	A,(CBUFF)	; EXECUTE DEFAULT COMMAND?
 699  B32A B7           	OR	A		; 0=NO
 700  B32B 20           	DEFB	20H
 701  B32C 26           	DEFB	RS1-$-1 AND 0FFH
 702  B32D
 703  B32D              ;	PROMP	T USER AND INPUT COMMAND LINE FROM HIM
 704  B32D              RESTRT:
 705  B32D 31 81 B0     	LD	SP,STACK	; RESET STACK
 706  B330
 707  B330              ;	PRINT	PROMPT (DU>)
 708  B330 CD 9E B0     	CALL	CRLF		; PRINT PROMPT
 709  B333 CD A8 B1     	CALL	GETDRV		; CURRENT DRIVE IS PART OF PROMPT
 710  B336 C6 41        	ADD	A,'A'		; CONVERT TO ASCII A-P
 711  B338 CD 87 B0     	CALL	CONOUT
 712  B33B CD FA B0     	CALL	GETUSR		; GET USER NUMBER
 713  B33E FE 0A        	CP	10		; USER < 10?
 714  B340 38           	DEFB	38H
 715  B341 09           	DEFB	RS00-$-1 AND 0FFH
 716  B342 D6 0A        	SUB	10		; SUBTRACT 10 FROM IT
 717  B344 F5           	PUSH	AF		; SAVE IT
 718  B345 3E 31        	LD	A,'1'		; OUTPUT 10'S DIGIT
 719  B347 CD 87 B0     	CALL	CONOUT
 720  B34A F1           	POP	AF
 721  B34B              RS00:
 722  B34B C6 30        	ADD	A,'0'		; OUTPUT 1'S DIGIT (CONVERT TO ASCII)
 723  B34D CD 87 B0     	CALL	CONOUT
 724  B350
 725  B350              ;	READ	INPUT LINE FROM USER OR $$$.SUB
 726  B350 CD 20 B1     	CALL	REDBUF		; INPUT COMMAND LINE FROM USER (OR $$$.SUB)
 727  B353
 728  B353              ;	PROCE	SS INPUT LINE
 729  B353              RS1:
 730  B353 11 80 00     	LD	DE,TBUFF	; PT TO INPUT COMMAND LINE (IN TBUFF)
 731  B356 CD B0 B1     	CALL	DMASET		; SET TBUFF TO DMA ADDRESS
 732  B359 CD A8 B1     	CALL	GETDRV		; GET DEFAULT DRIVE NUMBER
 733  B35C 32 01 B8     	LD	(TDRIVE),A	; SET IT
 734  B35F CD 10 B2     	CALL	SCANER		; PARSE COMMAND NAME FROM COMMAND LINE
 735  B362 C4 C3 B1     	CALL	NZ,ERROR	; ERROR IF COMMAND NAME CONTAINS A '?'
 736  B365 3A 02 B8     	LD	A,(TEMPDR)	; IS COMMAND OF FORM 'D:COMMAND'?
 737  B368 B7           	OR	A		; NZ=YES
 738  B369 C2 A7 B6     	JP	NZ,COM		; PROCESS AS COM FILE IMMEDIATELY
 739  B36C CD DA B2     	CALL	CMDSER		; SCAN FOR CCP-RESIDENT COMMAND
 740  B36F 21 C8 B2     	LD	HL,REQTBL	; EXECUTE COMMAND (CCP-RESIDENT OR COM)
 741  B372 5F           	LD	E,A		; COMPUTE OFFSET INTO ADDRESS TABLE
 742  B373 16 00        	LD	D,0
 743  B375 19           	ADD	HL,DE
 744  B376 19           	ADD	HL,DE
 745  B377 7E           	LD	A,(HL)		; GET ADDRESS IN HL
 746  B378 23           	INC	HL
 747  B379 66           	LD	H,(HL)		; ADDRESS HIGH
 748  B37A 6F           	LD	L,A		; ADDRESS LOW
 749  B37B E9           	JP	(HL)		; EXECUTE CCP ROUTINE
 750  B37C
 751  B37C              ;
 752  B37C              ;	ERROR	MESSAGES
 753  B37C              ;
 754  B37C              PRNNF:
 755  B37C CD A7 B0     	CALL	PRINT		; NO FILE MESSAGE
 756  B37F 4E 6F 20 46  	DEFB	'No Files',0
 756  B383 69 6C 65 73
 756  B387 00
 757  B388 C9           	RET
 758  B389
 759  B389              ;
 760  B389              ;	MORE	CCP UTILITIES
 761  B389              ;
 762  B389
 763  B389              ;	EXTRA	CT NUMBER FROM COMMAND LINE
 764  B389              NUMBER:
 765  B389 CD 10 B2     	CALL	SCANER		; PARSE NUMBER AND PLACE IN FCBFN
 766  B38C 3A 02 B8     	LD	A,(TEMPDR)	; TOKEN BEGIN WITH DRIVE SPEC (D:)?
 767  B38F B7           	OR	A		; ERROR IF SO
 768  B390 C2 C3 B1     	JP	NZ,ERROR
 769  B393 21 DE B7     	LD	HL,FCBFN	; PT TO TOKEN FOR CONVERSION
 770  B396 01 0B 00     	LD	BC,11		; B=ACCUMULATED VALUE, C=CHAR COUNT
 771  B399              NUM1:
 772  B399 7E           	LD	A,(HL)		; GET CHAR
 773  B39A FE 20        	CP	' '		; DONE IF <SP>
 774  B39C 28           	DEFB	28H
 775  B39D 24           	DEFB	NUM2-$-1 AND 0FFH
 776  B39E 23           	INC	HL		; PT TO NEXT CHAR
 777  B39F D6 30        	SUB	'0'		; CONVERT TO BINARY (ASCII 0-9 TO BINARY)
 778  B3A1 FE 0A        	CP	10		; ERROR IF >= 10
 779  B3A3 D2 C3 B1     	JP	NC,ERROR
 780  B3A6 57           	LD	D,A		; DIGIT IN D
 781  B3A7 78           	LD	A,B		; GET ACCUMULATED VALUE
 782  B3A8 E6 E0        	AND	0E0H		; CHECK FOR RANGE ERROR (>255)
 783  B3AA C2 C3 B1     	JP	NZ,ERROR
 784  B3AD 78           	LD	A,B		; NEW VALUE = OLD VALUE * 10
 785  B3AE 07           	RLCA
 786  B3AF 07           	RLCA
 787  B3B0 07           	RLCA
 788  B3B1 80           	ADD	A,B		; CHECK FOR RANGE ERROR
 789  B3B2 DA C3 B1     	JP	C,ERROR
 790  B3B5 80           	ADD	A,B		; CHECK FOR RANGE ERROR
 791  B3B6 DA C3 B1     	JP	C,ERROR
 792  B3B9 82           	ADD	A,D		; NEW VALUE = OLD VALUE * 10 + DIGIT
 793  B3BA DA C3 B1     	JP	C,ERROR	; CHECK FOR RANGE ERROR
 794  B3BD 47           	LD	B,A		; SET NEW VALUE
 795  B3BE 0D           	DEC	C		; COUNT DOWN
 796  B3BF 20           	DEFB	20H
 797  B3C0 D8           	DEFB	NUM1-$-1 AND 0FFH
 798  B3C1 C9           	RET
 799  B3C2
 800  B3C2              ;	REST	OF TOKEN BUFFER MUST BE <SP>
 801  B3C2              NUM2:
 802  B3C2 7E           	LD	A,(HL)		; CHECK FOR <SP>
 803  B3C3 FE 20        	CP	' '
 804  B3C5 C2 C3 B1     	JP	NZ,ERROR
 805  B3C8 23           	INC	HL		; PT TO NEXT
 806  B3C9 0D           	DEC	C		; COUNT DOWN CHARS
 807  B3CA 20           	DEFB	20H
 808  B3CB F6           	DEFB	NUM2-$-1 AND 0FFH
 809  B3CC 78           	LD	A,B		; GET ACCUMULATED VALUE
 810  B3CD C9           	RET
 811  B3CE
 812  B3CE              ;	MOVE	3 BYTES FROM HL TO DE
 813  B3CE              MOVHD3:
 814  B3CE 06 03        	LD	B,3		; MOVE 3 CHARS
 815  B3D0              MOVEHD:
 816  B3D0 7E           	LD	A,(HL)		; GET IT
 817  B3D1 12           	LD	(DE),A		; PUT IT
 818  B3D2 23           	INC	HL		; PT TO NEXT
 819  B3D3 13           	INC	DE
 820  B3D4 10           	DEFB	10H
 821  B3D5 FA           	DEFB	MOVEHD-$-1 AND 0FFH
 822  B3D6 C9           	RET
 823  B3D7
 824  B3D7              ;	PT	TO DIRECTORY ENTRY IN TBUFF WHOSE OFFSET IS SPECIFIED BY A AND C
 825  B3D7              DIRPTR:
 826  B3D7 21 80 00     	LD	HL,TBUFF	; PT TO TEMP BUFFER
 827  B3DA 81           	ADD	A,C		; PT TO 1ST BYTE OF DIR ENTRY
 828  B3DB CD 0B B2     	CALL	ADDAH		; PT TO DESIRED BYTE IN DIR ENTRY
 829  B3DE 7E           	LD	A,(HL)		; GET DESIRED BYTE
 830  B3DF C9           	RET
 831  B3E0
 832  B3E0              ;	CHECK	FOR SPECIFIED DRIVE AND LOG IT IN IF NOT DEFAULT
 833  B3E0              SLOGIN:
 834  B3E0 AF           	XOR	A		; SET FCBDN FOR DEFAULT DRIVE
 835  B3E1 32 DD B7     	LD	(FCBDN),A
 836  B3E4 CD F5 B3     	CALL	COMLOG		; CHECK DRIVE
 837  B3E7 C8           	RET	Z
 838  B3E8 C3 C0 B0     	JP	LOGIN		; DO LOGIN OTHERWISE
 839  B3EB
 840  B3EB              ;	CHECK	FOR SPECIFIED DRIVE AND LOG IN DEFAULT DRIVE IF SPECIFIED<>DEFAULT
 841  B3EB              DLOGIN:
 842  B3EB CD F5 B3     	CALL	COMLOG		; CHECK DRIVE
 843  B3EE C8           	RET	Z		; ABORT IF SAME
 844  B3EF 3A 01 B8     	LD	A,(TDRIVE)	; LOG IN DEFAULT DRIVE
 845  B3F2 C3 C0 B0     	JP	LOGIN
 846  B3F5
 847  B3F5              ;	ROUTI	NE COMMON TO BOTH LOGIN ROUTINES; ON EXIT, Z SET MEANS ABORT
 848  B3F5              COMLOG:
 849  B3F5 3A 02 B8     	LD	A,(TEMPDR)	; DRIVE SPECIFIED?
 850  B3F8 B7           	OR	A		; 0=NO
 851  B3F9 C8           	RET	Z
 852  B3FA 3D           	DEC	A		; COMPARE IT AGAINST DEFAULT
 853  B3FB 21 01 B8     	LD	HL,TDRIVE
 854  B3FE BE           	CP	(HL)
 855  B3FF C9           	RET			; ABORT IF SAME
 856  B400
 857  B400              ;
 858  B400              ;	CCP	DIRECTORY DISPLAY FUNCTION (DIR)
 859  B400              ;
 860  B400              DIR:
 861  B400 3E 80        	LD	A,80H		; SET SYSTEM BIT EXAMINATION
 862  B402 F5           	PUSH	AF
 863  B403 CD 10 B2     	CALL	SCANER		; EXTRACT POSSIBLE D:FILENAME.TYP TOKEN
 864  B406 CD E0 B3     	CALL	SLOGIN		; LOG IN DRIVE IF NECESSARY
 865  B409 21 DE B7     	LD	HL,FCBFN	; MAKE FCB WILD (ALL '?') IF NO FILENAME.TYP
 866  B40C 7E           	LD	A,(HL)		; GET FIRST CHAR OF FILENAME.TYP
 867  B40D FE 20        	CP	' '		; IF <SP>, ALL WILD
 868  B40F 28           	DEFB	28H
 869  B410 0E           	DEFB	DIR0-$-1 AND 0FFH
 870  B411 FE 40        	CP	'@'		; SYSTEM FILES?
 871  B413 20           	DEFB	20H
 872  B414 11           	DEFB	DIR2-$-1 AND 0FFH
 873  B415 23           	INC	HL		; JUST '@'?  <SP> MUST FOLLOW
 874  B416 7E           	LD	A,(HL)
 875  B417 2B           	DEC	HL		; BACK UP
 876  B418 FE 20        	CP	' '		; JUST '@' IF <SP> FOLLOWS
 877  B41A 20           	DEFB	20H
 878  B41B 0A           	DEFB	DIR2-$-1 AND 0FFH
 879  B41C F1           	POP	AF		; GET FLAG
 880  B41D AF           	XOR	A		; SET NO SYSTEM BIT EXAMINATION
 881  B41E F5           	PUSH	AF
 882  B41F              DIR0:
 883  B41F 06 0B        	LD	B,11		; NUMBER OF CHARS IN FN & FT
 884  B421              DIR1:
 885  B421 36 3F        	LD	(HL),'?'	; STORE '?'
 886  B423 23           	INC	HL
 887  B424 10           	DEFB	10H
 888  B425 FB           	DEFB	DIR1-$-1 AND 0FFH
 889  B426              DIR2:
 890  B426 F1           	POP	AF		; GET FLAG
 891  B427 CD 2D B4     	CALL	DIRPR		; PRINT DIRECTORY
 892  B42A C3 A6 B7     	JP	RSTCCP		; RESTART CCP
 893  B42D
 894  B42D              ;	DIREC	TORY PRINT ROUTINE; ON ENTRY, MSB OF A IS 1 (80H) IF SYSTEM FILES EXCL
 895  B42D              DIRPR:
 896  B42D 57           	LD	D,A		; STORE SYSTEM FLAG IN D
 897  B42E 1E 00        	LD	E,0		; SET COLUMN COUNTER TO ZERO
 898  B430 D5           	PUSH	DE		; SAVE COLUMN COUNTER (E) AND SYSTEM FLAG (D)
 899  B431 CD D8 B0     	CALL	SEARF		; SEARCH FOR SPECIFIED FILE (FIRST OCCURRANCE)
 900  B434 CC 7C B3     	CALL	Z,PRNNF	; PRINT NO FILE MSG; REG A NOT CHANGED
 901  B437
 902  B437              ;	ENTRY	SELECTION LOOP	; ON ENTRY, A=OFFSET FROM SEARF OR SEARN
 903  B437              DIR3:
 904  B437 28           	DEFB	28H
 905  B438 68           	DEFB	DIR11-$-1 AND 0FFH; DONE IF ZERO FLAG SET
 906  B439 3D           	DEC	A		; ADJUST TO RETURNED VALUE
 907  B43A 0F           	RRCA			; CONVERT NUMBER TO OFFSET INTO TBUFF
 908  B43B 0F           	RRCA
 909  B43C 0F           	RRCA
 910  B43D E6 60        	AND	60H
 911  B43F 4F           	LD	C,A		; OFFSET INTO TBUFF IN C (C=OFFSET TO ENTRY)
 912  B440 3E 0A        	LD	A,10		; ADD 10 TO PT TO SYSTEM FILE ATTRIBUTE BIT
 913  B442 CD D7 B3     	CALL	DIRPTR
 914  B445 D1           	POP	DE		; GET SYSTEM BIT MASK FROM D
 915  B446 D5           	PUSH	DE
 916  B447 A2           	AND	D		; MASK FOR SYSTEM BIT
 917  B448 20           	DEFB	20H
 918  B449 4D           	DEFB	DIR10-$-1 AND 0FFH; SKIP ENTRY IF BIT IS SET
 919  B44A D1           	POP	DE		; GET ENTRY COUNT (=<CR> COUNTER)
 920  B44B 7B           	LD	A,E		; ADD 1 TO IT
 921  B44C 1C           	INC	E
 922  B44D D5           	PUSH	DE		; SAVE IT
 923  B44E E6 03        	AND	03H		; OUTPUT <CRLF> IF 4 ENTRIES PRINTED IN LINE
 924  B450 F5           	PUSH	AF
 925  B451 20           	DEFB	20H
 926  B452 05           	DEFB	DIR4-$-1 AND 0FFH
 927  B453 CD 9E B0     	CALL	CRLF		; NEW LINE
 928  B456 18           	DEFB	18H
 929  B457 0B           	DEFB	DIR5-$-1 AND 0FFH
 930  B458              DIR4:
 931  B458 CD 85 B0     	CALL	SPACER		; PRINT <SP>:<SP> BETWEEN ENTRIES
 932  B45B 3E 3A        	LD	A,':'
 933  B45D CD 87 B0     	CALL	CONOUT
 934  B460 CD 85 B0     	CALL	SPACER
 935  B463              DIR5:
 936  B463 06 01        	LD	B,01H		; PT TO 1ST BYTE OF FILE NAME
 937  B465              DIR6:
 938  B465 78           	LD	A,B		; A=OFFSET
 939  B466 CD D7 B3     	CALL	DIRPTR		; HL NOW PTS TO 1ST BYTE OF FILE NAME
 940  B469 E6 7F        	AND	7FH		; MASK OUT MSB
 941  B46B FE 20        	CP	' '		; NO FILE NAME?
 942  B46D 20           	DEFB	20H
 943  B46E 13           	DEFB	DIR8-$-1 AND 0FFH; PRINT FILE NAME IF PRESENT
 944  B46F F1           	POP	AF
 945  B470 F5           	PUSH	AF
 946  B471 FE 03        	CP	03H
 947  B473 20           	DEFB	20H
 948  B474 0B           	DEFB	DIR7-$-1 AND 0FFH
 949  B475 3E 09        	LD	A,09H		; PT TO 1ST BYTE OF FILE TYPE
 950  B477 CD D7 B3     	CALL	DIRPTR		; HL NOW PTS TO 1ST BYTE OF FILE TYPE
 951  B47A E6 7F        	AND	7FH		; MASK OUT MSB
 952  B47C FE 20        	CP	' '		; NO FILE TYPE?
 953  B47E 28           	DEFB	28H
 954  B47F 16           	DEFB	DIR9-$-1 AND 0FFH; CONTINUE IF SO
 955  B480              DIR7:
 956  B480 3E 20        	LD	A,' '		; OUTPUT <SP>
 957  B482              DIR8:
 958  B482 CD 87 B0     	CALL	CONOUT		; PRINT CHAR
 959  B485 04           	INC	B		; INCR CHAR COUNT
 960  B486 78           	LD	A,B
 961  B487 FE 0C        	CP	12		; END OF FILENAME.TYP?
 962  B489 30           	DEFB	30H
 963  B48A 0B           	DEFB	DIR9-$-1 AND 0FFH; CONTINUE IF SO
 964  B48B FE 09        	CP	09H		; END IF FILENAME ONLY?
 965  B48D 20           	DEFB	20H
 966  B48E D6           	DEFB	DIR6-$-1 AND 0FFH; PRINT TYP IF SO
 967  B48F 3E 2E        	LD	A,'.'		; PRINT DOT BETWEEN FILE NAME AND TYPE
 968  B491 CD 87 B0     	CALL	CONOUT
 969  B494 18           	DEFB	18H
 970  B495 CF           	DEFB	DIR6-$-1 AND 0FFH
 971  B496              DIR9:
 972  B496 F1           	POP	AF
 973  B497              DIR10:
 974  B497 CD 9C B1     	CALL	BREAK		; CHECK FOR ABORT
 975  B49A 20           	DEFB	20H
 976  B49B 05           	DEFB	DIR11-$-1 AND 0FFH
 977  B49C CD DF B0     	CALL	SEARN		; SEARCH FOR NEXT FILE
 978  B49F 18           	DEFB	18H
 979  B4A0 96           	DEFB	DIR3-$-1 AND 0FFH; CONTINUE
 980  B4A1              DIR11:
 981  B4A1 D1           	POP	DE		; RESTORE STACK
 982  B4A2 C9           	RET
 983  B4A3
 984  B4A3              ;
 985  B4A3              ;	CCP	FILE ERASE FUNCTION (ERA)
 986  B4A3              ;
 987  B4A3              ERA:
 988  B4A3 CD 10 B2     	CALL	SCANER		; PARSE FILE SPECIFICATION
 989  B4A6 FE 0B        	CP	0BH		; ALL WILD (ALL FILES = 11 '?')?
 990  B4A8 20           	DEFB	20H
 991  B4A9 23           	DEFB	ERA1-$-1 AND 0FFH; IF NOT, THEN DO ERASES
 992  B4AA CD A7 B0     	CALL	PRINT
 993  B4AD 41 6C 6C 20  	DEFB	'All (Y/N)?',0
 993  B4B1 28 59 2F 4E
 993  B4B5 29 3F 00
 994  B4B8 CD 20 B1     	CALL	REDBUF		; GET REPLY
 995  B4BB 21 07 B0     	LD	HL,CBUFF	; CHECK FOR <CR>
 996  B4BE 35           	DEC	(HL)
 997  B4BF C2 2D B3     	JP	NZ,RESTRT	; RESTART CCP IF JUST <CR>
 998  B4C2 23           	INC	HL		; PT TO RESPONSE BYTE
 999  B4C3 7E           	LD	A,(HL)		; GET IT
1000  B4C4 FE 59        	CP	'Y'		; YES?
1001  B4C6 C2 2D B3     	JP	NZ,RESTRT	; RESTART CCP IF NOT
1002  B4C9 23           	INC	HL		; PT TO CHAR AFTER 'Y'
1003  B4CA 22 81 B0     	LD	(CIBPTR),HL	; SET PTR TO IT
1004  B4CD              ERA1:
1005  B4CD CD E0 B3     	CALL	SLOGIN		; LOG IN SELECTED DISK IF ANY
1006  B4D0 3E 80        	LD	A,80H		; SKIP SYSTEM FILES (EXAMINE SYSTEM BIT)
1007  B4D2 CD 2D B4     	CALL	DIRPR		; PRINT DIRECTORY OF ERASED FILES
1008  B4D5 11 DD B7     	LD	DE,FCBDN	; DELETE FILE SPECIFIED
1009  B4D8 CD E3 B0     	CALL	DELETE
1010  B4DB C3 A6 B7     	JP	RSTCCP		; REENTER CCP
1011  B4DE
1012  B4DE              ;
1013  B4DE              ;	CCP	LIST FUNCTION (LIST)
1014  B4DE              ;
1015  B4DE              LIST:
1016  B4DE 3E FF        	LD	A,0FFH		; TURN ON PRINTER FLAG
1017  B4E0 18           	DEFB	18H
1018  B4E1 01           	DEFB	TYPE0-$-1 AND 0FFH
1019  B4E2
1020  B4E2              ;
1021  B4E2              ;	CCP	TYPE FUNCTION (TYPE)
1022  B4E2              ;
1023  B4E2              TYPE:
1024  B4E2 AF           	XOR	A		; TURN OFF PRINTER FLAG
1025  B4E3
1026  B4E3              ;	ENTRY	POINT FOR CCP LIST FUNCTION (LIST)
1027  B4E3              TYPE0:
1028  B4E3 32 FE B7     	LD	(PRFLG),A	; SET FLAG
1029  B4E6 CD 10 B2     	CALL	SCANER		; EXTRACT FILENAME.TYP TOKEN
1030  B4E9 C2 C3 B1     	JP	NZ,ERROR	; ERROR IF ANY QUESTION MARKS
1031  B4EC CD E0 B3     	CALL	SLOGIN		; LOG IN SELECTED DISK IF ANY
1032  B4EF CD C6 B0     	CALL	OPENF		; OPEN SELECTED FILE
1033  B4F2 CA 79 B5     	JP	Z,TYPE4	; ABORT IF ERROR
1034  B4F5 CD 9E B0     	CALL	CRLF		; NEW LINE
1035  B4F8 CD 98 B5     	CALL	PAGSET		; SET LINE COUNT
1036  B4FB 21 03 B8     	LD	HL,CHRCNT	; SET CHAR POSITION/COUNT
1037  B4FE 36 FF        	LD	(HL),0FFH	; EMPTY LINE
1038  B500 06 00        	LD	B,0		; SET TAB CHAR COUNTER
1039  B502              TYPE1:
1040  B502 21 03 B8     	LD	HL,CHRCNT	; PT TO CHAR POSITION/COUNT
1041  B505 7E           	LD	A,(HL)		; END OF BUFFER?
1042  B506 FE 80        	CP	80H
1043  B508 38           	DEFB	38H
1044  B509 09           	DEFB	TYPE2-$-1 AND 0FFH
1045  B50A E5           	PUSH	HL		; READ NEXT BLOCK
1046  B50B CD E8 B0     	CALL	READF
1047  B50E E1           	POP	HL
1048  B50F 20           	DEFB	20H
1049  B510 56           	DEFB	TYPE3-$-1 AND 0FFH; ERROR?
1050  B511 AF           	XOR	A		; RESET COUNT
1051  B512 77           	LD	(HL),A
1052  B513              TYPE2:
1053  B513 34           	INC	(HL)		; INCREMENT CHAR COUNT
1054  B514 21 80 00     	LD	HL,TBUFF	; PT TO BUFFER
1055  B517 CD 0B B2     	CALL	ADDAH		; COMPUTE ADDRESS OF NEXT CHAR FROM OFFSET
1056  B51A 7E           	LD	A,(HL)		; GET NEXT CHAR
1057  B51B E6 7F        	AND	7FH		; MASK OUT MSB
1058  B51D FE 1A        	CP	1AH		; END OF FILE (^Z)?
1059  B51F CA A6 B7     	JP	Z,RSTCCP	; RESTART CCP IF SO
1060  B522 F5           	PUSH	AF		; SAVE CHAR
1061  B523 3A FE B7     	LD	A,(PRFLG)	; TYPE OR LIST?
1062  B526 B7           	OR	A		; 0=TYPE
1063  B527 28           	DEFB	28H
1064  B528 27           	DEFB	TYPE2T-$-1 AND 0FFH
1065  B529
1066  B529              ;	OUTPU	T CHAR TO LST: DEVICE WITH TABULATION
1067  B529 F1           	POP	AF		; GET CHAR
1068  B52A FE 0D        	CP	CR		; RESET TAB COUNT?
1069  B52C 28           	DEFB	28H
1070  B52D 0E           	DEFB	TABRST-$-1 AND 0FFH
1071  B52E FE 0A        	CP	LF		; RESET TAB COUNT?
1072  B530 28           	DEFB	28H
1073  B531 0A           	DEFB	TABRST-$-1 AND 0FFH
1074  B532 FE 09        	CP	TAB		; TAB?
1075  B534 28           	DEFB	28H
1076  B535 0D           	DEFB	LTAB-$-1 AND 0FFH
1077  B536 CD 98 B0     	CALL	LSTOUT		; LIST CHAR
1078  B539 04           	INC	B		; INCREMENT CHAR COUNT
1079  B53A 18           	DEFB	18H
1080  B53B 1F           	DEFB	TYPE2L-$-1 AND 0FFH
1081  B53C              TABRST:
1082  B53C CD 98 B0     	CALL	LSTOUT		; OUTPUT <CR>
1083  B53F 06 00        	LD	B,0		; RESET TAB COUNTER
1084  B541 18           	DEFB	18H
1085  B542 18           	DEFB	TYPE2L-$-1 AND 0FFH
1086  B543              LTAB:
1087  B543 3E 20        	LD	A,' '		; <SP>
1088  B545 CD 98 B0     	CALL	LSTOUT
1089  B548 04           	INC	B		; INCR POS COUNT
1090  B549 78           	LD	A,B
1091  B54A E6 07        	AND	7
1092  B54C 20           	DEFB	20H
1093  B54D F5           	DEFB	LTAB-$-1 AND 0FFH
1094  B54E 18           	DEFB	18H
1095  B54F 0B           	DEFB	TYPE2L-$-1 AND 0FFH
1096  B550
1097  B550              ;	OUTPU	T CHAR TO CON: WITH TABULATION
1098  B550              TYPE2T:
1099  B550 F1           	POP	AF		; GET CHAR
1100  B551 F5           	PUSH	AF		; SAVE CHAR
1101  B552 CD 87 B0     	CALL	CONOUT		; TYPE CHAR
1102  B555 F1           	POP	AF
1103  B556 FE 0A        	CP	LF		; PAGE ON <LF>
1104  B558 CC 7F B5     	CALL	Z,PAGER	; COUNT LINES AND PAGE
1105  B55B
1106  B55B              ;	CONTI	NUE PROCESSING
1107  B55B              TYPE2L:
1108  B55B CD 9C B1     	CALL	BREAK		; CHECK FOR ABORT
1109  B55E 28           	DEFB	28H
1110  B55F A2           	DEFB	TYPE1-$-1 AND 0FFH; CONTINUE IF NO CHAR
1111  B560 FE 03        	CP	'C'-'@'		; ^C?
1112  B562 CA A6 B7     	JP	Z,RSTCCP	; RESTART IF SO
1113  B565 18           	DEFB	18H
1114  B566 9B           	DEFB	TYPE1-$-1 AND 0FFH
1115  B567              TYPE3:
1116  B567 3D           	DEC	A		; NO ERROR?
1117  B568 CA A6 B7     	JP	Z,RSTCCP	; RESTART CCP
1118  B56B CD A7 B0     	CALL	PRINT		; PRINT READ ERROR MSG
1119  B56E 52 65 61 64  	DEFB	'Read Error',0
1119  B572 20 45 72 72
1119  B576 6F 72 00
1120  B579              TYPE4:
1121  B579 CD EB B3     	CALL	DLOGIN		; LOG IN DEFAULT DRIVE
1122  B57C C3 C3 B1     	JP	ERROR
1123  B57F
1124  B57F              ;
1125  B57F              ;	PAGIN	G ROUTINES
1126  B57F              ;	PAGER	COUNTS DOWN LINES AND PAUSES FOR INPUT (DIRECT) IF COUNT EXPIRES
1127  B57F              ;	PAGSE	T SETS LINES/PAGE COUNT
1128  B57F              ;
1129  B57F              PAGER:
1130  B57F 3A FF B7     	LD	A,(PAGCNT)	; COUNT DOWN
1131  B582 3D           	DEC	A
1132  B583 32 FF B7     	LD	(PAGCNT),A
1133  B586 C0           	RET	NZ
1134  B587 E5           	PUSH	HL		; SAVE HL
1135  B588              PAGER1:
1136  B588 0E 06        	LD	C,6		; DIRECT CONSOLE I/O
1137  B58A 1E FF        	LD	E,0FFH		; INPUT
1138  B58C CD 92 B0     	CALL	BDOSB
1139  B58F B7           	OR	A		; CHAR READY?
1140  B590 28           	DEFB	28H
1141  B591 F6           	DEFB	PAGER1-$-1 AND 0FFH; WAIT FOR CHAR
1142  B592 FE 03        	CP	'C'-'@'		; ^C
1143  B594 CA A6 B7     	JP	Z,RSTCCP	; RESTART CCP
1144  B597 E1           	POP	HL		; RESTORE HL
1145  B598              PAGSET:
1146  B598 3E 16        	LD	A,NLINES-2	; GET LINE COUNT
1147  B59A 32 FF B7     	LD	(PAGCNT),A
1148  B59D C9           	RET
1149  B59E
1150  B59E              ;
1151  B59E              ;	CCP	SAVE FUNCTION (SAVE)
1152  B59E              ;
1153  B59E              SAVE:
1154  B59E CD 89 B3     	CALL	NUMBER		; EXTRACT NUMBER FROM COMMAND LINE
1155  B5A1 F5           	PUSH	AF		; SAVE IT
1156  B5A2 CD 10 B2     	CALL	SCANER		; EXTRACT FILENAME.TYPE
1157  B5A5 C2 C3 B1     	JP	NZ,ERROR	; MUST BE NO '?' IN IT
1158  B5A8 CD E0 B3     	CALL	SLOGIN		; LOG IN SELECTED DISK
1159  B5AB 11 DD B7     	LD	DE,FCBDN	; DELETE FILE IN CASE IT ALREADY EXISTS
1160  B5AE D5           	PUSH	DE
1161  B5AF CD E3 B0     	CALL	DELETE
1162  B5B2 D1           	POP	DE
1163  B5B3 CD F6 B0     	CALL	CREATE		; MAKE NEW FILE
1164  B5B6 28           	DEFB	28H
1165  B5B7 2F           	DEFB	SAVE3-$-1 AND 0FFH; ERROR?
1166  B5B8 AF           	XOR	A		; SET RECORD COUNT FIELD OF NEW FILE'S FCB
1167  B5B9 32 FD B7     	LD	(FCBCR),A
1168  B5BC F1           	POP	AF		; GET PAGE COUNT
1169  B5BD 6F           	LD	L,A		; HL=PAGE COUNT
1170  B5BE 26 00        	LD	H,0
1171  B5C0 29           	ADD	HL,HL		; DOUBLE IT FOR HL=SECTOR (128 BYTES) COUNT
1172  B5C1 11 00 01     	LD	DE,TPA		; PT TO START OF SAVE AREA (TPA)
1173  B5C4              SAVE1:
1174  B5C4 7C           	LD	A,H		; DONE WITH SAVE?
1175  B5C5 B5           	OR	L		; HL=0 IF SO
1176  B5C6 28           	DEFB	28H
1177  B5C7 16           	DEFB	SAVE2-$-1 AND 0FFH
1178  B5C8 2B           	DEC	HL		; COUNT DOWN ON SECTORS
1179  B5C9 E5           	PUSH	HL		; SAVE PTR TO BLOCK TO SAVE
1180  B5CA 21 80 00     	LD	HL,128		; 128 BYTES PER SECTOR
1181  B5CD 19           	ADD	HL,DE		; PT TO NEXT SECTOR
1182  B5CE E5           	PUSH	HL		; SAVE ON STACK
1183  B5CF CD B0 B1     	CALL	DMASET		; SET DMA ADDRESS FOR WRITE (ADDRESS IN DE)
1184  B5D2 11 DD B7     	LD	DE,FCBDN	; WRITE SECTOR
1185  B5D5 CD F2 B0     	CALL	WRITE
1186  B5D8 D1           	POP	DE		; GET PTR TO NEXT SECTOR IN DE
1187  B5D9 E1           	POP	HL		; GET SECTOR COUNT
1188  B5DA 20           	DEFB	20H
1189  B5DB 0B           	DEFB	SAVE3-$-1 AND 0FFH; WRITE ERROR?
1190  B5DC 18           	DEFB	18H
1191  B5DD E6           	DEFB	SAVE1-$-1 AND 0FFH; CONTINUE
1192  B5DE              SAVE2:
1193  B5DE 11 DD B7     	LD	DE,FCBDN	; CLOSE SAVED FILE
1194  B5E1 CD D4 B0     	CALL	CLOSE
1195  B5E4 3C           	INC	A		; ERROR?
1196  B5E5 20           	DEFB	20H
1197  B5E6 0C           	DEFB	SAVE4-$-1 AND 0FFH
1198  B5E7              SAVE3:
1199  B5E7 CD A7 B0     	CALL	PRINT
1200  B5EA 4E 6F 20 53  	DEFB	'No Space',0
1200  B5EE 70 61 63 65
1200  B5F2 00
1201  B5F3              SAVE4:
1202  B5F3 CD AD B1     	CALL	DEFDMA		; SET DMA TO 0080
1203  B5F6 C3 A6 B7     	JP	RSTCCP		; RESTART CCP
1204  B5F9
1205  B5F9              ;
1206  B5F9              ;	CCP	RENAME FILE FUNCTION (REN)
1207  B5F9              ;
1208  B5F9              REN:
1209  B5F9 CD 10 B2     	CALL	SCANER		; EXTRACT FILE NAME
1210  B5FC C2 C3 B1     	JP	NZ,ERROR	; ERROR IF ANY '?' IN IT
1211  B5FF 3A 02 B8     	LD	A,(TEMPDR)	; SAVE CURRENT DEFAULT DISK
1212  B602 F5           	PUSH	AF
1213  B603 CD E0 B3     	CALL	SLOGIN		; LOG IN SELECTED DISK
1214  B606 CD D8 B0     	CALL	SEARF		; LOOK FOR SPECIFIED FILE
1215  B609 28           	DEFB	28H
1216  B60A 12           	DEFB	REN0-$-1 AND 0FFH; CONTINUE IF NOT FOUND
1217  B60B CD A7 B0     	CALL	PRINT
1218  B60E 46 69 6C 65  	DEFB	'File Exists',0
1218  B612 20 45 78 69
1218  B616 73 74 73 00
1219  B61A C3 61 B6     	JP	RENRET
1220  B61D              REN0:
1221  B61D 21 DD B7     	LD	HL,FCBDN	; SAVE NEW FILE NAME
1222  B620 11 ED B7     	LD	DE,FCBDM
1223  B623 06 10        	LD	B,16		; 16 BYTES
1224  B625 CD D0 B3     	CALL	MOVEHD
1225  B628 2A 81 B0     	LD	HL,(CIBPTR)	; GET PTR TO NEXT CHAR IN COMMAND LINE
1226  B62B EB           	EX	DE,HL		; ... IN DE
1227  B62C CD 02 B2     	CALL	SBLANK		; SKIP TO NON-BLANK
1228  B62F FE 3D        	CP	'='		; '=' OR UNDERSCORE OK
1229  B631 28           	DEFB	28H
1230  B632 04           	DEFB	REN1-$-1 AND 0FFH
1231  B633 FE 5F        	CP	5FH
1232  B635 20           	DEFB	20H
1233  B636 2D           	DEFB	REN4-$-1 AND 0FFH
1234  B637              REN1:
1235  B637 EB           	EX	DE,HL		; PT TO CHAR AFTER '=' OR UNDERSCORE IN HL
1236  B638 23           	INC	HL
1237  B639 22 81 B0     	LD	(CIBPTR),HL	; SAVE PTR TO OLD FILE NAME
1238  B63C CD 10 B2     	CALL	SCANER		; EXTRACT FILENAME.TYP TOKEN
1239  B63F 20           	DEFB	20H
1240  B640 23           	DEFB	REN4-$-1 AND 0FFH; ERROR IF ANY '?'
1241  B641 F1           	POP	AF		; GET OLD DEFAULT DRIVE
1242  B642 47           	LD	B,A		; SAVE IT
1243  B643 21 02 B8     	LD	HL,TEMPDR	; COMPARE IT AGAINST CURRENT DEFAULT DRIVE
1244  B646 7E           	LD	A,(HL)		; MATCH?
1245  B647 B7           	OR	A
1246  B648 28           	DEFB	28H
1247  B649 04           	DEFB	REN2-$-1 AND 0FFH
1248  B64A B8           	CP	B		; CHECK FOR DRIVE ERROR
1249  B64B 70           	LD	(HL),B
1250  B64C 20           	DEFB	20H
1251  B64D 16           	DEFB	REN4-$-1 AND 0FFH
1252  B64E              REN2:
1253  B64E 70           	LD	(HL),B
1254  B64F AF           	XOR	A
1255  B650 32 DD B7     	LD	(FCBDN),A	; SET DEFAULT DRIVE
1256  B653 11 DD B7     	LD	DE,FCBDN	; RENAME FILE
1257  B656 0E 17        	LD	C,17H		; BDOS RENAME FCT
1258  B658 CD 05 00     	CALL	BDOS
1259  B65B 3C           	INC	A		; ERROR? -- FILE NOT FOUND IF SO
1260  B65C 20           	DEFB	20H
1261  B65D 03           	DEFB	RENRET-$-1 AND 0FFH
1262  B65E              REN3:
1263  B65E CD 7C B3     	CALL	PRNNF		; PRINT NO FILE MSG
1264  B661              RENRET:
1265  B661 C3 A6 B7     	JP	RSTCCP		; RESTART CCP
1266  B664              REN4:
1267  B664 CD EB B3     	CALL	DLOGIN		; LOG IN DEFAULT DRIVE
1268  B667 C3 C3 B1     	JP	ERROR
1269  B66A
1270  B66A              ;
1271  B66A              ;	CCP	SET USER NUMBER FUNCTION
1272  B66A              ;
1273  B66A              MAXUSR:	EQU	15		; MAXIMUM USER AREA ACCESSABLE
1274  B66A              USER:
1275  B66A CD 89 B3     	CALL	NUMBER		; EXTRACT USER NUMBER FROM COMMAND LINE
1276  B66D FE 10        	CP	MAXUSR+1	; ERROR IF >= MAXUSR
1277  B66F D2 C3 B1     	JP	NC,ERROR
1278  B672 5F           	LD	E,A		; PLACE USER NUMBER IN E
1279  B673 3A DE B7     	LD	A,(FCBFN)	; CHECK FOR PARSE ERROR
1280  B676 FE 20        	CP	' '		; <SP>=ERROR
1281  B678 CA C3 B1     	JP	Z,ERROR
1282  B67B CD FC B0     	CALL	SETUSR		; SET SPECIFIED USER
1283  B67E C3 A9 B7     	JP	RCCPNL		; RESTART CCP (NO DEFAULT LOGIN)
1284  B681
1285  B681              ;
1286  B681              ;	CLEAR	SCREEN ROUTINE FOR CRT TERMINAL
1287  B681              ;
1288  B681              CLS:
1289  B681 3E 1B        	LD	A, 27		; Chars to clear the screen
1290  B683 CD 87 B0     	CALL	CONOUT
1291  B686 3E 5B        	LD	A, '['
1292  B688 CD 87 B0     	CALL	CONOUT
1293  B68B 3E 32        	LD	A, '2'
1294  B68D CD 87 B0     	CALL	CONOUT
1295  B690 3E 4A        	LD	A, 'J'
1296  B692 CD 87 B0     	CALL	CONOUT
1297  B695 3E 1B        	LD	A, 27		; And cursor home
1298  B697 CD 87 B0     	CALL	CONOUT
1299  B69A 3E 5B        	LD	A, '['
1300  B69C CD 87 B0     	CALL	CONOUT
1301  B69F 3E 48        	LD	A, 'H'
1302  B6A1 CD 87 B0     	CALL	CONOUT
1303  B6A4 C3 A9 B7     	JP	RCCPNL		; RESTART CCP (NO DEFAULT LOGIN)
1304  B6A7
1305  B6A7              ;
1306  B6A7              ;	NOT	CCP-RESIDENT COMMAND -- PROCESS AS TRANSCIENT
1307  B6A7              ;
1308  B6A7              COM:
1309  B6A7 CD FA B0     	CALL	GETUSR		; GET CURRENT USER NUMBER
1310  B6AA 32 04 B8     	LD	(TMPUSR),A	; SAVE IT FOR LATER
1311  B6AD 32 05 B8     	LD	(TSELUSR),A	; TEMP USER TO SELECT
1312  B6B0 3A DE B7     	LD	A,(FCBFN)	; ANY COMMAND?
1313  B6B3 FE 20        	CP	' '		; ' ' MEANS COMMAND WAS 'D:' TO SWITCH
1314  B6B5 20           	DEFB	20H
1315  B6B6 14           	DEFB	COM1-$-1 AND 0FFH; NOT <SP>, SO MUST BE TRANSCIENT OR ERROR
1316  B6B7 3A 02 B8     	LD	A,(TEMPDR)	; LOOK FOR DRIVE SPEC
1317  B6BA B7           	OR	A		; IF ZERO, JUST BLANK
1318  B6BB CA A9 B7     	JP	Z,RCCPNL
1319  B6BE 3D           	DEC	A		; ADJUST FOR LOG IN
1320  B6BF 32 01 B8     	LD	(TDRIVE),A	; SET DEFAULT DRIVE
1321  B6C2 CD 10 B1     	CALL	SETU0D		; SET DRIVE WITH USER 0
1322  B6C5 CD C0 B0     	CALL	LOGIN		; LOG IN DRIVE
1323  B6C8 C3 A9 B7     	JP	RCCPNL		; RESTART CCP
1324  B6CB              COM1:
1325  B6CB 3A E6 B7     	LD	A,(FCBFT)	; CHECK FOR ERROR IN FCB
1326  B6CE FE 20        	CP	' '		; ERROR IF SO
1327  B6D0 C2 C3 B1     	JP	NZ,ERROR
1328  B6D3              ;
1329  B6D3              ;	COMA	IS A REENTRY POINT FOR A NON-STANDARD CP/M MODIFICATION
1330  B6D3              ;	THIS	IS THE RETURN POINT FOR WHEN THE .COM FILE IS NOT FOUND THE
1331  B6D3              ;	FIRST	TIME, DRIVE A: IS SELECTED FOR A SECOND STTEMPT
1332  B6D3              ;
1333  B6D3              COMA:
1334  B6D3 CD E0 B3     	CALL	SLOGIN		; LOG IN SPECIFIED DRIVE IF ANY
1335  B6D6 21 A3 B7     	LD	HL,COMMSG	; PLACE 'COM' IN FCB
1336  B6D9 11 E6 B7     	LD	DE,FCBFT	; PT TO FILE TYPE
1337  B6DC CD CE B3     	CALL	MOVHD3		; MOVE 3 CHARS
1338  B6DF CD C6 B0     	CALL	OPENF		; OPEN COMMAND.COM FILE
1339  B6E2 20           	DEFB	20H
1340  B6E3 1C           	DEFB	COMA1-$-1 AND 0FFH; ERROR?
1341  B6E4
1342  B6E4              ;	ERROR	ROUTINE TO SELECT USER 0 IF ALL ELSE FAILS
1343  B6E4 3A 05 B8     	LD	A,(TSELUSR)	; GET USER FLAG
1344  B6E7 B7           	OR	A		; SET FLAGS
1345  B6E8 28           	DEFB	28H
1346  B6E9 0A           	DEFB	COMA0-$-1 AND 0FFH; TRY DISK A: IF ALREADY USER 0
1347  B6EA AF           	XOR	A		; SELECT USER 0
1348  B6EB 5F           	LD	E,A
1349  B6EC 32 05 B8     	LD	(TSELUSR),A	; RESET TEMPORARY USER NUMBER
1350  B6EF CD FC B0     	CALL	SETUSR
1351  B6F2 18           	DEFB	18H
1352  B6F3 DF           	DEFB	COMA-$-1 AND 0FFH; TRY AGAIN
1353  B6F4
1354  B6F4              ;	ERROR	ROUTINE TO SELECT DRIVE A: IF DEFAULT WAS ORIGINALLY SELECTED
1355  B6F4              COMA0:
1356  B6F4 21 02 B8     	LD	HL,TEMPDR	; GET DRIVE FROM CURRENT COMMAND
1357  B6F7 AF           	XOR	A			; A=0
1358  B6F8 B6           	or	(HL)
1359  B6F9 C2 93 B7     	JP	NZ,COM8		; ERROR IF ALREADY DISK A:
1360  B6FC 36 01        	LD	(HL),1		; SELECT DRIVE a:
1361  B6FE 18           	DEFB	18H
1362  B6FF D3           	DEFB	COMA-$-1 AND 0FFH
1363  B700
1364  B700              ;	FILE	FOUND -- PROCEED WITH LOAD
1365  B700              COMA1:
1366  B700 21 00 01     	LD	HL,TPA		; SET START ADDRESS OF MEMORY LOAD
1367  B703              COM2:
1368  B703 E5           	PUSH	HL		; SAVE ADDRESS OF NEXT SECTOR
1369  B704 EB           	EX	DE,HL		; ... IN DE
1370  B705 CD B0 B1     	CALL	DMASET		; SET DMA ADDRESS FOR LOAD
1371  B708 11 DD B7     	LD	DE,FCBDN	; READ NEXT SECTOR
1372  B70B CD EB B0     	CALL	READ
1373  B70E 20           	DEFB	20H
1374  B70F 1F           	DEFB	COM3-$-1 AND 0FFH; READ ERROR OR EOF?
1375  B710 E1           	POP	HL		; GET ADDRESS OF NEXT SECTOR
1376  B711 11 80 00     	LD	DE,128		; MOVE 128 BYTES PER SECTOR
1377  B714 19           	ADD	HL,DE		; PT TO NEXT SECTOR IN HL
1378  B715 11 80 AF     	LD	DE,ENTRY-128	; ARE WE GOING TO WRITE OVER CCP?
1379  B718 7D           	LD	A,L		; COMPARE ADDRESS OF NEXT SECTOR (HL)
1380  B719 93           	SUB	E		;   TO START OF CCP (DE)
1381  B71A 7C           	LD	A,H
1382  B71B 9A           	SBC	A,D
1383  B71C 30           	DEFB	30H
1384  B71D 02           	DEFB	PRNLE-$-1 AND 0FFH; ERROR IF SAME
1385  B71E 18           	DEFB	18H
1386  B71F E3           	DEFB	COM2-$-1 AND 0FFH; OTHERWISE CONTINUE
1387  B720
1388  B720              ;	LOAD	ERROR
1389  B720              PRNLE:
1390  B720 CD A7 B0     	CALL	PRINT
1391  B723 42 61 64 20  	DEFB	'Bad Load',0
1391  B727 4C 6F 61 64
1391  B72B 00
1392  B72C C3 A6 B7     	JP	RSTCCP
1393  B72F
1394  B72F              COM3:
1395  B72F E1           	POP	HL		; LOAD COMPLETE!
1396  B730 3D           	DEC	A
1397  B731 20           	DEFB	20H
1398  B732 ED           	DEFB	PRNLE-$-1 AND 0FFH
1399  B733 CD 9C B7     	CALL	RESETUSR	; RESET CURRENT USER NUMBER
1400  B736              	;   USER MUST BE SET BEFORE LOGIN IS DONE
1401  B736 CD EB B3     	CALL	DLOGIN		; LOG IN DEFAULT DRIVE
1402  B739 CD 10 B2     	CALL	SCANER		; SEARCH COMMAND LINE FOR NEXT TOKEN
1403  B73C 21 02 B8     	LD	HL,TEMPDR	; SAVE PTR TO DRIVE SPEC
1404  B73F E5           	PUSH	HL
1405  B740 7E           	LD	A,(HL)		; SET DRIVE SPEC
1406  B741 32 DD B7     	LD	(FCBDN),A
1407  B744 3E 10        	LD	A,10H		; OFFSET FOR 2ND FILE SPEC
1408  B746 CD 12 B2     	CALL	SCAN1		; SCAN FOR IT AND LOAD IT INTO FCBDN+16
1409  B749 E1           	POP	HL		; SET UP DRIVE SPECS
1410  B74A 7E           	LD	A,(HL)
1411  B74B 32 ED B7     	LD	(FCBDM),A
1412  B74E AF           	XOR	A
1413  B74F 32 FD B7     	LD	(FCBCR),A
1414  B752 11 5C 00     	LD	DE,TFCB		; COPY TO DEFAULT FCB
1415  B755 21 DD B7     	LD	HL,FCBDN	; FROM FCBDN
1416  B758 06 21        	LD	B,33		; SET UP DEFAULT FCB
1417  B75A CD D0 B3     	CALL	MOVEHD
1418  B75D 21 08 B0     	LD	HL,CIBUFF
1419  B760              COM4:
1420  B760 7E           	LD	A,(HL)		; SKIP TO END OF 2ND FILE NAME
1421  B761 B7           	OR	A		; END OF LINE?
1422  B762 28           	DEFB	28H
1423  B763 07           	DEFB	COM5-$-1 AND 0FFH
1424  B764 FE 20        	CP	' '		; END OF TOKEN?
1425  B766 28           	DEFB	28H
1426  B767 03           	DEFB	COM5-$-1 AND 0FFH
1427  B768 23           	INC	HL
1428  B769 18           	DEFB	18H
1429  B76A F5           	DEFB	COM4-$-1 AND 0FFH
1430  B76B
1431  B76B              ;	LOAD	COMMAND LINE INTO TBUFF
1432  B76B              COM5:
1433  B76B 06 00        	LD	B,0		; SET CHAR COUNT
1434  B76D 11 81 00     	LD	DE,TBUFF+1	; PT TO CHAR POS
1435  B770              COM6:
1436  B770 7E           	LD	A,(HL)		; COPY COMMAND LINE TO TBUFF
1437  B771 12           	LD	(DE),A
1438  B772 B7           	OR	A		; DONE IF ZERO
1439  B773 28           	DEFB	28H
1440  B774 05           	DEFB	COM7-$-1 AND 0FFH
1441  B775 04           	INC	B		; INCR CHAR COUNT
1442  B776 23           	INC	HL		; PT TO NEXT
1443  B777 13           	INC	DE
1444  B778 18           	DEFB	18H
1445  B779 F6           	DEFB	COM6-$-1 AND 0FFH
1446  B77A
1447  B77A              ;	RUN	LOADED TRANSCIENT PROGRAM
1448  B77A              COM7:
1449  B77A 78           	LD	A,B		; SAVE CHAR COUNT
1450  B77B 32 80 00     	LD	(TBUFF),A
1451  B77E CD 9E B0     	CALL	CRLF		; NEW LINE
1452  B781 CD AD B1     	CALL	DEFDMA		; SET DMA TO 0080
1453  B784 CD 01 B1     	CALL	SETUD		; SET USER/DISK
1454  B787 CD 00 01     	CALL	TPA		; RUN TRANSCIENT
1455  B78A CD 10 B1     	CALL	SETU0D		; SET USER 0/DISK
1456  B78D CD C0 B0     	CALL	LOGIN		; LOGIN DISK
1457  B790 C3 2D B3     	JP	RESTRT		; RESTART CCP
1458  B793
1459  B793              ;	TRANS	CIENT LOAD ERROR
1460  B793              COM8:
1461  B793 CD 9C B7     	CALL	RESETUSR	; RESET CURRENT USER NUMBER
1462  B796              	;   RESET MUST BE DONE BEFORE LOGIN
1463  B796 CD EB B3     	CALL	DLOGIN		; LOG IN DEFAULT DISK
1464  B799 C3 C3 B1     	JP	ERROR
1465  B79C
1466  B79C              ;	RESET	SELECTED USER NUMBER IF CHANGED
1467  B79C              RESETUSR:
1468  B79C 3A 04 B8     	LD	A,(TMPUSR)	; GET OLD USER NUMBER
1469  B79F 5F           	LD	E,A		; PLACE IN E
1470  B7A0 C3 FC B0     	JP	SETUSR		; RESET
1471  B7A3
1472  B7A3              ;	FILE	TYPE FOR COMMAND
1473  B7A3              COMMSG:
1474  B7A3 43 4F 4D     	DEFB	'COM'
1475  B7A6
1476  B7A6              ;	ENTRY	POINT FOR RESTARTING CCP AND LOGGING IN DEFAULT DRIVE
1477  B7A6              RSTCCP:
1478  B7A6 CD EB B3     	CALL	DLOGIN		; LOG IN DEFAULT DRIVE
1479  B7A9              ;	ENTRY	POINT FOR RESTARTING CCP WITHOUT LOGGING IN DEFAULT DRIVE
1480  B7A9              RCCPNL:
1481  B7A9 CD 10 B2     	CALL	SCANER		; EXTRACT NEXT TOKEN FROM COMMAND LINE
1482  B7AC 3A DE B7     	LD	A,(FCBFN)	; GET FIRST CHAR OF TOKEN
1483  B7AF D6 20        	SUB	' '		; ANY CHAR?
1484  B7B1 21 02 B8     	LD	HL,TEMPDR
1485  B7B4 B6           	OR	(HL)
1486  B7B5 C2 C3 B1     	JP	NZ,ERROR
1487  B7B8 C3 2D B3     	JP	RESTRT
1488  B7BB
1489  B7BB
1490  B7BB              RNGSUB:
1491  B7BB 00           	DEFB	0		;0=$$$.SUB NOT PRESENT, ELSE $$$.SUB PRESENT
1492  B7BC
1493  B7BC              ;
1494  B7BC              ;	FILE	CONTROL BLOCK (FCB), ONE
1495  B7BC              ;
1496  B7BC              SUBFCB:
1497  B7BC 00           	DEFB	0		;DISK NAME
1498  B7BD 24 24 24     	DEFB	'$$$'		;FILE NAME
1499  B7C0 20 20 20 20  	DEFB	'     '
1499  B7C4 20
1500  B7C5 53 55 42     	DEFB	'SUB'		;FILE TYPE
1501  B7C8 00           	DEFB	0		;EXTENT NUMBER
1502  B7C9 00           	DEFB	0		;S1
1503  B7CA              SUBFS2:
1504  B7CA 00           	DEFS	1		;S2
1505  B7CB              SUBFRC:
1506  B7CB 00           	DEFS	1		;RECORD COUNT
1507  B7CC 00 00 00...  	DEFS	16		;DISK GROUP MAP
1508  B7DC              SUBFCR:
1509  B7DC 00           	DEFS	1		;CURRENT RECORD NUMBER
1510  B7DD
1511  B7DD              ;
1512  B7DD              ;	FILE	CONTROL BLOCK
1513  B7DD              ;
1514  B7DD              FCBDN:
1515  B7DD 00           	DEFS	1		;DISK NAME
1516  B7DE              FCBFN:
1517  B7DE 00 00 00...  	DEFS	8		;FILE NAME
1518  B7E6              FCBFT:
1519  B7E6 00 00 00     	DEFS	3		;FILE TYPE
1520  B7E9 00           	DEFS	1		;EXTENT NUMBER
1521  B7EA 00 00        	DEFS	2		;S1 AND S2
1522  B7EC 00           	DEFS	1		;RECORD COUNT
1523  B7ED              FCBDM:
1524  B7ED 00 00 00...  	DEFS	16		;DISK GROUP MAP
1525  B7FD              FCBCR:
1526  B7FD 00           	DEFS	1		;CURRENT RECORD NUMBER
1527  B7FE
1528  B7FE              ;	OTHER	BUFFERS
1529  B7FE              PRFLG:
1530  B7FE 00           	DEFB	0		;PRINTER FLAG (0=NO, 0FFH=YES)
1531  B7FF              PAGCNT:
1532  B7FF 16           	DEFB	NLINES-2	;LINES LEFT ON PAGE
1533  B800              IORESL:
1534  B800 00           	DEFB	0		;I/O RESULTS
1535  B801              TDRIVE:
1536  B801 01           	DEFB	1		;TEMP DRIVE NUMBER
1537  B802              TEMPDR:
1538  B802 00           	DEFB	0
1539  B803              CHRCNT:
1540  B803 00           	DEFB	0		;CHAR COUNT FOR TYPE
1541  B804              TMPUSR:
1542  B804 00           	DEFB	0		;TEMPORARY USER NUMBER FOR COM
1543  B805              TSELUSR:
1544  B805 00           	DEFB	0		;TEMPORARY SELECTED USER NUMBER
1545  B806
1546  B806              	END
# file closed: z80ccp.asm
